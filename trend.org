#+HTML_HEAD: -*- fill-column: 92 -*-

#+TITLE: Trend

#+NAME:css
#+BEGIN_HTML
<link rel="stylesheet" type="text/css" href="css/css.css" />
#+END_HTML

* Что мы знаем о рынке недвижимости

  Рынок недвижимости это =аренда= и =продажа=. Внутри этих разделов продается все - от
  квартир и комнат до участков и коммерческой недвижимости

** Продажа
*** Квартиры в новостройках
**** Застройщики

     У нас есть некоторое количество (423) =застройщиков=, которые строят =жилые
     комплексы=. Квартиры в этих жилых комплексах продаются как самим застройщиком (его
     отделом продаж) так =агенствами недвижимости= и =субагентами=.

     В =исходной бд= застройщики определены так:

     #+CAPTION: Застройщики в исходной БД - схема данных
     #+NAME: source_developer_flds
       | Field      | Type                | Null | Key | Default | Extra |
       |------------+---------------------+------+-----+---------+-------|
       | id         | binary(16)          | NO   | PRI | NULL    |       |
       | name       | varchar(255)        | NO   |     | NULL    |       |
       | sortIndex  | tinyint(4) unsigned | NO   |     | 0       |       |
       | deleted    | tinyint(1)          | NO   |     | 0       |       |
       | dateUpdate | datetime            | YES  |     | NULL    |       |
       | address    | varchar(255)        | YES  |     | NULL    |       |
       | url        | varchar(50)         | YES  |     | NULL    |       |
       | phone      | varchar(50)         | YES  |     | NULL    |       |
       | note       | text                | YES  |     | NULL    |       |

     А в целевой БД мы определили застройщиков в основном файле проекта, в разделе [[file:doc.org::Застройщики
     (developer)][Застройщики]]

     Это позволяет написать функцию, которая будет преобразовывать застройщика из исходной
     БД и класть его в целевую. Вот запрос, которым мы можем получать всех застройщиков,
     которые имеют активные корпуса в активных комплексах и isPrivate этих комплексах равно
     нулю. IsPrivate - флаг приватности, говорит о том, что эти комплексы нельзя
     рекламировать.

     #+name: query_get_developer
     #+header: :engine mysql
     #+header: :dbhost bkn.ru
     #+header: :dbport 3306
     #+header: :dbuser root
     #+header: :dbpassword YGAhBawd1j~SANlw"Y#l
     #+header: :database bkn_base
     #+begin_src sql :results output :var limit="5" :results table
       SELECT
           toguid(d.id) AS developerId,
           REPLACE(REPLACE(d.name, '«', ''), '»', '') AS developer_name,
           d.address,
           d.url,
           d.phone,
           d.note
       FROM
           nb_complex cmpx
       INNER JOIN
           developer d  ON  d.id = cmpx.developerId
       INNER JOIN
           nb_complex ap FORCE INDEX (AP)  ON  cmpx.id = ap.bknid  AND  ap.nb_sourceId IN (1 , 3)  AND  ap.statusId = 1  AND  ap.isPrivate = 0
       INNER JOIN
           nb_block b  ON  b.nb_complexId = ap.id  AND  b.statusId = 1
       INNER JOIN
           nb_appartment a  ON  b.id = a.nb_blockId  AND  a.statusId = 1
       WHERE
           cmpx.nb_sourceId = 2  AND  cmpx.statusId = 1
       GROUP BY d.id , d.name
       ORDER BY d.name
       LIMIT $limit;
     #+end_src

     Обернув его в макрос, который осуществляет подключение к mysql и установку кодировки мы
     можем получить всех застройщиков, имеющих активные комплексы:

     #+NAME: iface_contents
     #+BEGIN_SRC lisp :noweb tangle :exports none

       (in-package #:moto)

       (ql:quickload "cl-mysql")


       (defun get-active-developers ()
         (with-mysql
           (let ((cnt (caaaar (cl-mysql:query "SELECT count(id) FROM developer"))))
             (cl-mysql:query
              (replace-all "
                            <<query_get_developer>>
                           "
                           "$limit"
                           (format nil "~A" cnt))))))
     #+END_SRC

     То же в EmacsLisp

     #+NAME: developers_data
     #+BEGIN_SRC emacs-lisp :var table=query_get_developers :results output :exports none
       (mapcar #'(lambda (x)
                   (princ (format "***** %s \n\n" (second x)))
                   (princ (format "      #+CAPTION: Застройщик %s\n" (second x)))
                   (princ (format "      #+NAME: DEVELOPER-DATA-%s\n" (first x)))
                   (princ (format "      | id      | %s | \n" (first x)))
                   (princ (format "      | name    | %s | \n" (second x)))
                   (princ (format "      | address | %s | \n" (let ((tmp (third x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | url     | %s | \n" (let ((tmp (fourth x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | phone   | %s | \n\n" (let ((tmp (nth 4 x))) (if (string= "NULL" tmp) "" tmp))))
                   ;; (princ (format "      %s \n" (nth 5 x)))
                   (let* ((alfa   (nth 5 x))
                          (bravo  (if (string= "NULL" alfa) "" alfa)))
                     (unless (string= "" bravo)
                       (let* ((charlie (replace-regexp-in-string "\"" "\\\\\"" bravo))
                              (delta   (format "php -r '$a=\"%s\"; echo strip_tags($a);'" charlie))
                              (echo    (shell-command-to-string delta))
                              (foxtrot (replace-regexp-in-string "&nbsp;" "" echo)))
                         (princ (format "      #+CAPTION: Описание %s\n" (second x)))
                         (princ (format "      #+NAME: DEVELOPER-NOTE-%s\n" (first x)))
                         (princ (format "      #+BEGIN\n"))
                         (princ (format "        %s \n" foxtrot))
                         (princ (format "      #+END\n\n"))))))
               table)
     #+END_SRC

     Застройщики имеют описание, в котором есть html-форматирование, которое хотелось бы
     удалить. Я использую для этого php-функцию strip_tags

     Вот так я вызывают PHP из Common Lisp:

     #+NAME: iface_contents
     #+BEGIN_SRC lisp :noweb tangle :exports none

       (in-package #:moto)

       (defun sanitize-developer (x)
         (list
          :guid (nth 0 x)
          :name (nth 1 x)
          :address (nth 2 x)
          :url (nth 3 x)
          :phone (nth 4 x)
          :note (let ((note (nth 5 x)))
                  (if (null note)
                      ""
                      (let ((proc (sb-ext:run-program "/usr/bin/php" (list "-r" (format nil "echo(strip_tags(\"~A\"));" (replace-all note "\"" "\\\""))) :output :stream :wait nil)))
                        (let ((in-string ""))
                          (with-open-stream (stream (sb-ext:process-output proc))
                            ;; (finish-output *stream*)
                            (loop :for iter :from 1 :do
                               (handler-case
                                   (tagbody start-decoding
                                      (setf in-string (concatenate 'string in-string (read-line stream)))
                                      (incf iter)
                                      (go start-decoding))
                                 (END-OF-FILE () (return))))
                            (close stream))
                          in-string))))))

       ;; (mapcar
       ;;  #'sanitize-developer
       ;;  (caar (get-active-developers)))
     #+END_SRC

     А вот так можно вызвать его из Emacs Lisp:

     #+NAME: strip_tags
     #+BEGIN_SRC emacs-lisp :var param="<p>strip</p>" :results value :exports none
       (defun strip-tags (param)
         (let* ((alfa   param)
                (bravo  (if (string= "NULL" alfa) "" alfa)))
           (unless (string= "" bravo)
             (let* ((charlie (replace-regexp-in-string "\"" "\\\\\"" bravo))
                    (delta   (format "php -r '$a=\"%s\"; echo strip_tags($a);'" charlie))
                    (echo    (shell-command-to-string delta))
                    (foxtrot (replace-regexp-in-string "&nbsp;" "" echo)))
               foxtrot))))
     #+END_SRC

     Теперь всех полученных застройщиков можно сохранить в PostgreSQL:

     #+NAME: iface_contents
     #+BEGIN_SRC lisp :noweb tangle :exports none

       (in-package #:moto)

       (defun developers-from-mysql-to-pgsql ()
         (with-connection *db-spec*
           (query "TRUNCATE developer"))
         (mapcar #'(lambda (x)
                     (apply #'make-developer (sanitize-developer x)))
                 (caar (get-active-developers))))

       (developers-from-mysql-to-pgsql)
     #+END_SRC

     Теперь, когда все застройщики у нас в базе - их можно отобразить в веб-интерфейсе. На
     странице застройщика оставим placeholder для того чтобы позже отобразить все жилые
     комплексы этого застройщика.

     #+NAME: iface_contents
     #+BEGIN_SRC lisp :noweb tangle :exports none

       (in-package #:moto)

       ;; Застройщики (все)
       (restas:define-route trnd-devs ("/trnd/devs")
         (ps-html
          ((:form :method "POST")
           ((:table :border 1)
            (format nil "~{~A~}"
                    (with-collection (i (sort (all-developer) #'(lambda (a b) (< (id a) (id b)))))
                      (ps-html
                       ((:tr)
                        ((:td) (id i))
                        ((:td) ((:a :href (format nil "/trnd/dev/~A" (guid i))) (name i)))))))
            ))))

       ;; Страничка застройщика
       (restas:define-route trnd-dev-page ("/trnd/dev/:guid")
         (let ((dev (find-developer :guid guid)))
           (if (null dev)
               ""
               (let ((dev (car dev)))
                 (ps-html
                  ((:a :href "/trnd/devs") "Все застройщики")
                  ((:br))
                  ((:br))
                  ((:table :border 1)
                   ((:tr)
                    ((:td) "id")
                    ((:td) (id dev)))
                   ((:tr)
                    ((:td) "guid")
                    ((:td) (guid dev)))
                   ((:tr)
                    ((:td) "name")
                    ((:td) (name dev)))
                   ((:tr)
                    ((:td) "address")
                    ((:td) (address dev)))
                   ((:tr)
                    ((:td) "url")
                    ((:td) (url dev)))
                   ((:tr)
                    ((:td) "phone")
                    ((:td) (phone dev))))
                  (note dev)
                  <<web-iface-dev-cmpx-s>>
                  )))))
     #+END_SRC

**** Жилые комплексы

     В исходной БД жилые комплексы определены так:

     #+CAPTION: Жилые комплексы в исходной БД
     #+NAME: source_complex_flds
       | Field         | Type                | Null | Key | Default           | Extra |
       |---------------+---------------------+------+-----+-------------------+-------|
       | id            | binary(16)          | NO   | PRI | NULL              |       |
       | nb_sourceId   | tinyint(4) unsigned | NO   | MUL | 1                 |       |
       | statusId      | tinyint(4) unsigned | NO   | MUL | 1                 |       |
       | developerId   | binary(16)          | NO   | MUL | NULL              |       |
       | date_insert   | timestamp           | NO   |     | CURRENT_TIMESTAMP |       |
       | date_update   | datetime            | NO   |     | NULL              |       |
       | regionId      | int(11) unsigned    | NO   | MUL | NULL              |       |
       | districtId    | int(11) unsigned    | NO   | MUL | NULL              |       |
       | district_name | varchar(255)        | YES  |     | NULL              |       |
       | city_name     | varchar(255)        | YES  |     | NULL              |       |
       | street_name   | varchar(255)        | YES  |     | NULL              |       |
       | subway1Id     | int(11) unsigned    | YES  |     | NULL              |       |
       | subway2Id     | int(11) unsigned    | YES  |     | NULL              |       |
       | subway3Id     | int(11) unsigned    | YES  |     | NULL              |       |
       | name          | varchar(250)        | NO   | MUL | NULL              |       |
       | note          | text                | YES  |     | NULL              |       |
       | longitude     | decimal(18,10)      | YES  |     | NULL              |       |
       | latitude      | decimal(18,10)      | YES  |     | NULL              |       |
       | dateUpdate    | datetime            | YES  |     | NULL              |       |
       | isPrivate     | tinyint(1)          | NO   | MUL | 0                 |       |
       | bknId         | binary(16)          | YES  | MUL | NULL              |       |

     А в целевой БД мы определили жилые комплексы в основном файле проекта в разделе
     [[file:doc.org::Жилые комплексы (complex)][Жилые комплексы]]

     У каждого ЖК есть =статус= - например: активный или архивный (есть и другие)

     У каждого ЖК есть =источник данных= - обычно это агентство, от которого получена
     информация об этом ЖК.

     У каждого ЖК есть =регион=, =район= и несколько ближайших станций =метро=.

     В каждом ЖК есть =корпуса=, т.е. построенные или строящиеся внутри проекта ЖК дома. Они
     могут быть объединены в =очереди сдачи=. У каждого корпуса есть адрес дома.

     Корпуса могут быть в разных состояниях готовности, для этого у них есть поле
     =status_buildId=, указывающее на таблицу =status_build=, в которых эти состояния перечислены

     Таким образом мы можем получить все ЖК какого-нибудь застройщика:

     #+name: query_get_developer_complex
     #+header: :engine mysql
     #+header: :dbhost bkn.ru
     #+header: :dbport 3306
     #+header: :dbuser root
     #+header: :dbpassword YGAhBawd1j~SANlw"Y#l
     #+header: :database bkn_base
     #+begin_src sql :results output :var developerId="6945cf04-8335-11e4-b6c0-448a5bd44c07" :results none
       SELECT toguid(id), nb_sourceId, statusId, date_insert, date_update, regionId, districtId, district_name, city_name, street_name, subway1Id, subway2Id, subway3Id, name, note, longitude, latitude, dateUpdate, isPrivate, toguid(bknId), toguid(developerId)
       FROM nb_complex
       WHERE
          nb_sourceId IN (2)
       AND
          developerId = guidtobinary('$developerId')
     #+end_src

     Напишем функцию, которая возвращает все жилые комплексы конкретного застройщика

     #+NAME: iface_contents
     #+BEGIN_SRC lisp :noweb tangle :exports none

       (in-package #:moto)

       (defun get-cmpx-by-developer (guid)
         (with-mysql
           (cl-mysql:query
            (replace-all "
                          <<query_get_developer_complex>>
                         "
                         "$developerId"
                         (format nil "~A" guid)))))

       ;; ~/quicklisp/dists/quicklisp/software/cl-mysql-20120208-git/
       ;; (when (null (string-to-date (subseq string 0 10)))
       ;;   (return-from string-to-universal-time 2208988800))

       (get-cmpx-by-developer "6945D3A6-8335-11E4-B6C0-448A5BD44C07")
     #+END_SRC

     Теперь нужна функция, которая превращает комплекс в правильный plist, удаляя
     форматирование, если оно есть:

     #+NAME: iface_contents
     #+BEGIN_SRC lisp :noweb tangle :exports none

       (in-package #:moto)

       (defun sanitize-cmpx (x)
         (list
          :guid (nth 0 x)
          :nb_sourceId (nth 1 x)
          :statusId (nth 2 x)
          :date_insert "1970-01-01 00:00:00"
          ;; :date_insert (nth 3 x)
          :date_update "1970-01-01 00:00:00"
          ;; :date_update (let ((tmp (nth 4 x)))
          ;;                (if (null tmp)
          ;;                    "1970-01-01 00:00:00"
          ;;                    "1970-01-01 00:00:00"
          ;;                    ;; tmp
          ;;                    ))
          :regionId (nth 5 x)
          :districtId (nth 6 x)
          :district_name (nth 7 x)
          :city_name (nth 8 x)
          :street_name (nth 9 x)
          :subway1Id (let ((tmp (nth 10 x)))
                       (if (null tmp)
                           0
                           tmp))
          :subway2Id (let ((tmp (nth 11 x)))
                       (if (null tmp)
                           0
                           tmp))
          :subway3Id (let ((tmp (nth 12 x)))
                       (if (null tmp)
                           0
                           tmp))
          :name (nth 13 x)
          :note (let ((note (nth 14 x)))
                  (if (null note)
                      ""
                      (let ((proc (sb-ext:run-program "/usr/bin/php" (list "-r" (format nil "echo(strip_tags(\"~A\"));" (replace-all note "\"" "\\\""))) :output :stream :wait nil)))
                        (let ((in-string ""))
                          (with-open-stream (stream (sb-ext:process-output proc))
                            ;; (finish-output *stream*)
                            (loop :for iter :from 1 :do
                               (handler-case
                                   (tagbody start-decoding
                                      (setf in-string (concatenate 'string in-string (read-line stream)))
                                      (incf iter)
                                      (go start-decoding))
                                 (END-OF-FILE () (return))))
                            (close stream))
                          in-string))))
          :longitude (nth 15 x)
          :latitude (nth 16 x)
          ;; :dateUpdate (nth 17 x)
          :dateUpdate "1970-01-01 00:00:00"
          :isPrivate (nth 18 x)
          :bknId (nth 19 x)
          :developerId (nth 20 x)))

       ;; (print
       ;;  (mapcar #'sanitize-cmpx
       ;;          (caar
       ;;           (get-cmpx-by-developer "6945DC73-8335-11E4-B6C0-448A5BD44C07"))))
     #+END_SRC

     Теперь берем всех активных застройщиков из целевой БД, которых мы получили на
     предыдущем шаге, получаем все их комплексы из исходной базы и сохраняем в целевую

     #+NAME: iface_contents
     #+BEGIN_SRC lisp :noweb tangle :exports none

       (in-package #:moto)

       (let ((all-cmpx-s))
         (mapcar #'(lambda (guid)
                     (let ((cmpx-s (caar (get-cmpx-by-developer guid))))
                       (mapcar #'(lambda (cmpx)
                                   (push (sanitize-cmpx cmpx) all-cmpx-s))
                              cmpx-s)))
                (mapcar #'guid (all-developer)))
         (mapcar #'(lambda (x)
                     (print x)
                     (apply #'make-cmpx x))
                 all-cmpx-s))
     #+END_SRC

     А вот так можно то же самое получить из EmacsLisp

     #+NAME: developers_data_fwefewf
     #+BEGIN_SRC emacs-lisp :results output :exports none
       (save-excursion
         (org-babel-goto-named-src-block "query_get_developer")
         (let ((info (org-babel-get-src-block-info t)))
           (setf (cdr (assoc :var (nth 2 info))) (cons "limit" "400"))
           (let* ((developers (cddr (org-babel-execute-src-block nil info)))
                  (devs       (mapcar #'(lambda (dev)
                                          (list :id (nth 0 dev)
                                                :name (nth 1 dev)
                                                :address (let ((tmp (strip-tags (nth 2 dev)))) (if (null tmp) "" tmp))
                                                :url     (let ((tmp (strip-tags (nth 3 dev)))) (if (null tmp) "" tmp))
                                                :phone   (let ((tmp (strip-tags (nth 4 dev)))) (if (null tmp) "" tmp))
                                                :note    (let ((tmp (strip-tags (nth 5 dev)))) (if (null tmp) "" tmp))))
                                      developers)))
             (mapcar #'(lambda (dev)
                         (princ (format "\n%s - %s\n" (getf dev :name) (getf dev :id)))
                         (save-excursion
                           (org-babel-goto-named-src-block "query_get_developer_complex")
                           (let ((info (org-babel-get-src-block-info t)))
                             (setf (cdr (assoc :var (nth 2 info))) (cons "developerId" (getf dev :id)))
                             (let* ((complexes (cddr (org-babel-execute-src-block nil info)))
                                    (cmpx      (mapcar #'(lambda (plex)
                                                           (let ((plex (list :id   (nth 00 plex)
                                                                             :name (nth 13 plex)
                                                                             :nb_sourceId   (let ((tmp (strip-tags (nth 01 plex)))) (if (null tmp) "" tmp))
                                                                             :statusId      (let ((tmp (strip-tags (nth 02 plex)))) (if (null tmp) "" tmp))
                                                                             :date_insert   (let ((tmp (strip-tags (nth 03 plex)))) (if (null tmp) "" tmp))
                                                                             :date_update   (let ((tmp (strip-tags (nth 04 plex)))) (if (null tmp) "" tmp))
                                                                             :regionId      (let ((tmp (strip-tags (nth 05 plex)))) (if (null tmp) "" tmp))
                                                                             :districtId    (let ((tmp (strip-tags (nth 06 plex)))) (if (null tmp) "" tmp))
                                                                             :district_name (let ((tmp (strip-tags (nth 07 plex)))) (if (null tmp) "" tmp))
                                                                             :city_name     (let ((tmp (strip-tags (nth 08 plex)))) (if (null tmp) "" tmp))
                                                                             :street_name   (let ((tmp (strip-tags (nth 09 plex)))) (if (null tmp) "" tmp))
                                                                             :subway1Id     (let ((tmp (strip-tags (nth 10 plex)))) (if (null tmp) "" tmp))
                                                                             :subway2Id     (let ((tmp (strip-tags (nth 11 plex)))) (if (null tmp) "" tmp))
                                                                             :subway3Id     (let ((tmp (strip-tags (nth 12 plex)))) (if (null tmp) "" tmp))
                                                                             :note          (let ((tmp (strip-tags (nth 14 plex)))) (if (null tmp) "" tmp))
                                                                             :longitude     (let ((tmp (strip-tags (nth 15 plex)))) (if (null tmp) "" tmp))
                                                                             :latitude      (let ((tmp (strip-tags (nth 16 plex)))) (if (null tmp) "" tmp))
                                                                             :dateUpdate    (let ((tmp (strip-tags (nth 17 plex)))) (if (null tmp) "" tmp))
                                                                             :isPrivate     (let ((tmp (strip-tags (nth 18 plex)))) (if (null tmp) "" tmp))
                                                                             :bknId         (let ((tmp (strip-tags (nth 19 plex)))) (if (null tmp) "" tmp))
                                                                             )))
                                                             (princ (format "  %s - %s - %s\n" (getf plex :name) (getf plex :id) (getf plex :statusId)))))
                                                       complexes))
                                    ))))
                         )
                     devs))))
     #+END_SRC

     #+NAME: web-iface-dev-cmpx-s
     #+BEGIN_SRC lisp :noweb tangle :exports none
       (let ((cmpx-s (find-cmpx :developerid guid)))
         (if (null cmpx-s)
             "Нет комплексов"
             (ps-html
              ((:table :border 1)
               (format nil "~{~A~}"
                       (mapcar #'(lambda (cmpx)
                                   (ps-html
                                    ((:tr)
                                     ((:td) (id cmpx))
                                     ((:td) ((:a :href (format nil "/trnd/cmpx/~A" (guid cmpx))) (name cmpx))))))
                               cmpx-s))))))
     #+END_SRC

     Это запрос для получения всех комплексов (с необходимыми джойнами)

     #+name: query_get_complex
     #+header: :engine mysql
     #+header: :dbhost bkn.ru
     #+header: :dbport 3306
     #+header: :dbuser root
     #+header: :dbpassword YGAhBawd1j~SANlw"Y#l
     #+header: :database bkn_base
     #+begin_src sql :results output :var developerId="6945cf04-8335-11e4-b6c0-448a5bd44c07" :results table
        SELECT
            toguid(ap.id)
          , REPLACE(REPLACE(bkn.name, '«', ''), '»', '') AS name
          , ap.nb_sourceId
          , ap.statusId
          , ap.regionId
          , ap.districtId
          , ap.district_name
          , ap.city_name
          , ap.street_name
          , ap.subway1Id
          , ap.subway2Id
          , ap.subway3Id
          , ap.note
          , ap.longitude
          , ap.latitude
          , ap.dateUpdate
          , ap.isPrivate
          , toguid(ap.bknId)
        FROM
            nb_complex bkn
                INNER JOIN
            developer d ON d.id = bkn.developerId
                INNER JOIN
            nb_complex ap FORCE INDEX (AP) ON bkn.id = ap.bknid
                AND ap.nb_sourceId IN (1 , 3)
                AND ap.statusId = 1
                AND ap.isPrivate = 0
                INNER JOIN
            nb_block b ON b.nb_complexId = ap.id
                AND b.statusId = 1
                INNER JOIN
            nb_appartment a ON b.id = a.nb_blockId AND a.statusId = 1
        WHERE
                bkn.nb_sourceId = 2
            AND bkn.statusId = 1
            AND d.id = guidtobinary('$developerId')
        GROUP BY ap.id , bkn.name , ap.nb_sourceId , d.id , d.name
        ORDER BY name
     #+end_src

     Теперь можно сделать страничку комплекса

     #+NAME: iface_contents
     #+BEGIN_SRC lisp :noweb tangle :exports none
       (in-package #:moto)

       ;; Страничка застройщика
       (restas:define-route trnd-cmpx-page ("/trnd/cmpx/:guid")
         (let ((cmpx (find-cmpx :guid guid)))
           (if (null cmpx)
               ""
               (let ((cmpx (car cmpx)))
                 (ps-html
                  ((:a :href "/trnd/devs") "Все застройщики")
                  ((:br))
                  ((:br))
                  ((:table :border 1)
                   ((:tr)
                    ((:td) "id")
                    ((:td) (id cmpx)))
                   ((:tr)
                    ((:td) "guid")
                    ((:td) (guid cmpx)))
                    ((:tr)
                    ((:td) "name")
                    ((:td) (name cmpx)))
                   ((:tr)
                    ((:td) "statusId")
                    ((:td) (statusId cmpx)))
                   ((:tr)
                    ((:td) "developer")
                    ((:td) ((:a :href (format nil "/trnd/dev/~A" (developerId cmpx)))
                            (name (car (find-developer :guid (developerId cmpx)))))))
                   ((:tr)
                    ((:td) "longitude")
                    ((:td) (longitude cmpx)))
                   ((:tr)
                    ((:td) "latitude")
                    ((:td) (latitude cmpx)))
                   ((:tr)
                    ((:td) "latitude")
                    ((:td) (latitude cmpx)))
                   ((:tr)
                    ((:td) "bknId")
                    ((:td) (bknId cmpx))))
                  (note cmpx)
                  )))))
     #+END_SRC

**** Корпуса жилых комплексов

     В исходной БД корпуса жилых комплексов определены так:

     #+CAPTION: Корпуса жилых комплексов в исходной БД
     #+NAME: source_block_flds
       | Field          | Type                 | Null | Key | Default | Extra |
       |----------------+----------------------+------+-----+---------+-------|
       | id             | binary(16)           | NO   | PRI | NULL    |       |
       | nb_sourceId    | tinyint(4) unsigned  | NO   | MUL | 2       |       |
       | nb_complexId   | binary(16)           | NO   | MUL | NULL    |       |
       | statusId       | tinyint(4) unsigned  | NO   | MUL | 1       |       |
       | status_buildId | tinyint(4) unsigned  | YES  |     | NULL    |       |
       | house          | varchar(15)          | YES  |     | NULL    |       |
       | block          | varchar(15)          | YES  |     | NULL    |       |
       | litera         | varchar(50)          | YES  |     | NULL    |       |
       | floors         | varchar(20)          | YES  |     | NULL    |       |
       | quarter_end    | tinyint(4) unsigned  | YES  |     | NULL    |       |
       | year_end       | smallint(6) unsigned | YES  |     | NULL    |       |
       | house_typeId   | tinyint(4) unsigned  | YES  |     | NULL    |       |
       | bknId          | binary(16)           | YES  |     | NULL    |       |
       | dateUpdate     | datetime             | YES  |     | NULL    |       |

     А в целевой БД мы определили жилые комплексы в основном файле проекта в разделе
     [[file:doc.org::Корпуса жилых комплексов (block)][Корпуса жилых комплексов]]


     ===TODO===


**** Данные комплексов

     Здесь мы соберем все данные которые у нас есть по всем жилым комплексам. Все активные комплексы
     можно получить вот таким запросом:

     #+name: query_get_complexes
     #+header: :engine mysql
     #+header: :dbhost bkn.ru
     #+header: :dbport 3306
     #+header: :dbuser root
     #+header: :dbpassword YGAhBawd1j~SANlw"Y#l
     #+header: :database bkn_base
     #+begin_src sql :results output table d
       SELECT
           toguid(ap.id),
           REPLACE(REPLACE(bkn.name, '«', ''),
               '»',
               '') AS name,
           ap.nb_sourceId,
           toguid(d.id) AS developerId,
           REPLACE(REPLACE(d.name, '«', ''),
               '»',
               '') AS developer_name,
           ap.statusId,
           ap.regionId,
           ap.districtId,
           ap.district_name,
           ap.city_name,
           ap.street_name,
           ap.subway1Id,
           ap.subway2Id,
           ap.subway3Id,
           ap.note,
           ap.longitude,
           ap.latitude,
           ap.dateUpdate,
           ap.isPrivate,
           toguid(ap.bknId)
       FROM
           bkn_base.nb_complex bkn
               INNER JOIN
           bkn_base.developer d ON d.id = bkn.developerId
               INNER JOIN
           bkn_base.nb_complex ap FORCE INDEX (AP) ON bkn.id = ap.bknid
               AND ap.nb_sourceId IN (1 , 3)
               AND ap.statusId = 1
               AND ap.isPrivate = 0
               INNER JOIN
           bkn_base.nb_block b ON b.nb_complexId = ap.id
               AND b.statusId = 1
               INNER JOIN
           bkn_base.nb_appartment a ON b.id = a.nb_blockId AND a.statusId = 1
       WHERE
           bkn.nb_sourceId = 2 AND bkn.statusId = 1
       GROUP BY ap.id , bkn.name , ap.nb_sourceId , d.id , d.name
       ORDER BY name
       LIMIT 3
     #+end_src

     В процесе сбора данных будем забирать все корпуса этих комплексов

     #+name: my_query
     #+header: :engine mysql
     #+header: :dbhost bkn.ru
     #+header: :dbport 3306
     #+header: :dbuser root
     #+header: :dbpassword YGAhBawd1j~SANlw"Y#l
     #+header: :database bkn_base
     #+begin_src sql :var thevar=3 :results output table d
       select toguid(id), nb_sourceId, toguid(nb_complexId), statusId, status_buildId, house, block, litera, floors, quarter_end, year_end, house_typeId, bknId from nb_block limit $thevar;
     #+end_src

     #+results: my_query
     | toguid(id)                           | nb_sourceId | toguid(nb_complexId)                 | statusId | status_buildId | house | block | litera |    floors | quarter_end | year_end | house_typeId | bknId |
     |--------------------------------------+-------------+--------------------------------------+----------+----------------+-------+-------+--------+-----------+-------------+----------+--------------+-------|
     | BC594F00-300C-11E3-B13F-5404A6B20161 |           2 | 9DFF6CEF-D7EE-11E4-9FBB-448A5BD44C07 |        1 | NULL           |  NULL |  NULL | уч.1   |      9-17 |           2 |     2014 |            2 | NULL  |
     | 03DA6000-C403-11E4-9FBB-448A5BD44C07 |           2 | 9DFFDAC4-D7EE-11E4-9FBB-448A5BD44C07 |        1 | NULL           |    23 |     6 | NULL   | 5-8,18-20 |           3 |     2015 |            2 | NULL  |
     | FF646B00-EA65-11E4-81F1-448A5BD44C07 |           2 | 9E0006F5-D7EE-11E4-9FBB-448A5BD44C07 |        1 | 1              |     2 |     1 | NULL   |        25 |           1 |     2016 |           22 | NULL  |

     #+name: quote-blks
     #+BEGIN_SRC emacs-lisp :var blk="my_query" :var sep="\"\n\""
       (save-excursion
         (replace-regexp-in-string "\"\"" ""
          (mapconcat
           (lambda (x)
             (org-babel-goto-named-src-block x)
             (format "%S" (cadr  (org-babel-get-src-block-info  t))))
           (split-string blk "," t)
           sep)
          t t))
     #+END_SRC

     #+results: quote-blks
     : my_query

     #+begin_src emacs-lisp :colnames yes :noweb yes
       (org-babel-execute-src-block "my_query")
     #+end_src

     #+results:



     #+NAME: compexes_data
     #+BEGIN_SRC emacs-lisp :var table=query_get_complexes :results output :exports none
       (mapcar #'(lambda (x)
                   (princ (format "***** %s \n\n" (second x)))
                   (princ (format "      #+CAPTION: Жилой комплекс %s\n" (second x)))
                   (princ (format "      #+NAME: COMPLEX-DATA-%s\n" (first x)))
                   (princ (format "      | id                   | %s | \n" (let ((tmp (nth 00 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | name                 | %s | \n" (let ((tmp (nth 01 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | nb_sourceId          | %s | \n" (let ((tmp (nth 02 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | developerId          | %s | \n" (let ((tmp (nth 03 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | developer_name       | %s | \n" (let ((tmp (nth 04 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | statusId             | %s | \n" (let ((tmp (nth 05 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | regionId             | %s | \n" (let ((tmp (nth 06 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | districtId           | %s | \n" (let ((tmp (nth 07 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | district_name        | %s | \n" (let ((tmp (nth 08 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | city_name            | %s | \n" (let ((tmp (nth 09 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | street_name          | %s | \n" (let ((tmp (nth 10 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | subway1Id            | %s | \n" (let ((tmp (nth 11 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | subway2Id            | %s | \n" (let ((tmp (nth 12 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | subway3Id            | %s | \n" (let ((tmp (nth 13 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | longitude            | %s | \n" (let ((tmp (nth 15 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | latitude             | %s | \n" (let ((tmp (nth 16 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | dateUpdate           | %s | \n" (let ((tmp (nth 17 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | isPrivate            | %s | \n" (let ((tmp (nth 18 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | bknId                | %s | \n" (let ((tmp (nth 19 x))) (if (string= "NULL" tmp) "" tmp))))
                   ;; (princ (format "      %s \n" (nth 5 x)))
                   (let* ((alfa   (nth 14 x))
                          (bravo  (if (string= "NULL" alfa) "" alfa)))
                     (unless (string= "" bravo)
                       (let* ((charlie (replace-regexp-in-string "\"" "\\\\\"" bravo))
                              (delta   (format "php -r '$a=\"%s\"; echo strip_tags($a);'" charlie))
                              (echo    (shell-command-to-string delta))
                              (foxtrot (replace-regexp-in-string "&nbsp;" "" echo)))
                         (princ (format "\n      #+CAPTION: Описание %s\n" (second x)))
                         (princ (format "      #+NAME: DEVELOPER-NOTE-%s\n" (first x)))
                         (princ (format "      #+BEGIN\n"))
                         (princ (format "        %s \n" foxtrot))
                         (princ (format "      #+END\n\n"))))))
               table)
     #+END_SRC

**** Источники данных

     Комплекс может прийти к нам от разных агенств. Источники собраны здесь, в таблице nb_source

     #+CAPTION: Источники данных - схема данных
     #+NAME: source_flds
     | field      | field type          | note                       |
     |------------+---------------------+----------------------------|
     | id         | tinyint(4) unsigned | Числовой идентификатор     |
     | name       | varchar(255)        | Название источника         |
     | sortIndex  | tinyint(4) unsigned | Индекс сортировки          |
     | deleted    | tinyint(1)          | Признак удаленного         |

     #+CAPTION: Источники данных - данные
     #+NAME: source_data
     | id | name                   | sortIndex | deleted |
     |----+------------------------+-----------+---------|
     |  1 | АЛЕКСАНДР Недвижимость |         0 |       0 |
     |  2 | БКН-Профи              |         0 |       0 |
     |  3 | Пет.Недвижимость       |         0 |       0 |

**** Статусы комплексов

     #+CAPTION: Статусы комплексов - схема данных
     #+NAME: status_flds
     | field      | field type          | note                      |
     |------------+---------------------+---------------------------|
     | id         | tinyint(4) unsigned | Числовой идентификатор    |
     | name       | varchar(40)         | Название статуса          |
     | nameShort  | varchar(20)         | Короткое название статуса |
     | sortIndex  | tinyint(4) unsigned | Индекс сортировки         |
     | deleted    | tinyint(1)          | Признак удаленного        |

     #+CAPTION: Статусы комплексов - данные
     #+NAME: status_data
     | id | name                 | nameShort | sortIndex | deleted |
     |----+----------------------+-----------+-----------+---------|
     |  1 | Активные объекты     | Активно   |         1 |       0 |
     |  2 | Архивные объекты     | Архивно   |         2 |       0 |
     |  3 | Арендованные объекты | Сдано     |         3 |       0 |
     |  4 | Проданные объекты    | Продано   |         4 |       0 |
     |  5 | Удаленные объекты    | Удалено   |         5 |       0 |

**** Регионы

     #+CAPTION: Регионы - схема данных
     #+NAME: region_flds
     | field      | field type          | note                   |
     |------------+---------------------+------------------------|
     | id         | int(11) unsigned    | Числовой идентификатор |
     | name       | varchar(255)        | Название региона       |
     | sortIndex  | tinyint(4) unsigned | Индекс сортировки      |
     | deleted    | tinyint(1)          | Признак удаленного     |

     #+CAPTION: Регионы - данные
     #+NAME: region_data
     |    id | name                    | sortIndex | deleted |
     |-------+-------------------------+-----------+---------|
     |     1 | Санкт-Петербург         |         0 |       0 |
     |  4000 | Москва                  |         2 |       0 |
     |  4331 | Республика Карелия      |       255 |       0 |
     |  4332 | Новгородская область    |       255 |       0 |
     |  5001 | Ленинградская область   |         1 |       0 |
     | 16417 | Псковская область       |       255 |       0 |
     | 17500 | Краснодарский край      |       255 |       0 |
     | 17600 | Московская область      |         3 |       0 |
     | 17801 | Калининградская область |       255 |       0 |
     | 26500 | Вологодская область     |       255 |       0 |
     | 26600 | Пензенская область      |       255 |       0 |
     | 26700 | Тверская область        |       255 |       0 |
     | 26926 | Ставропольский край     |       255 |       0 |
     | 27475 | Ивановская область      |       255 |       0 |
     | 27600 | Астраханская область    |       255 |       0 |
     | 27700 | Мурманская область      |       255 |       0 |
     | 27800 | Нижегородская область   |       255 |       0 |
     | 28200 | Красноярский Край       |       255 |       0 |
     | 40000 | Тульская область        |       255 |       0 |
     | 40113 | Ярославская область     |       255 |       0 |
     | 40122 | Крым респ.              |       255 |       0 |
     | 40196 | Севастополь             |       255 |       0 |
     | 41923 | Калужская область       |       255 |       0 |
     | 41961 | Ростовская область      |       255 |       0 |
     | 42202 | Воронежская область     |       255 |       0 |

**** Районы

     #+CAPTION: Районы - схема данных
     #+NAME: district_flds
     | field      | field type          | note |
     |------------+---------------------+------|
     | id         | int(11) unsigned    | NO   |
     | regionId   | int(11) unsigned    | NO   |
     | name       | varchar(255)        | NO   |
     | sortIndex  | tinyint(4) unsigned | NO   |
     | deleted    | tinyint(1)          | NO   |

     #+CAPTION: Районы - данные
     #+NAME: district_data
     |    id | regionId | name                          | sortIndex | deleted |
     |-------+----------+-------------------------------+-----------+---------|
     |     4 |        1 | Адмиралтейский                |         0 |       0 |
     |     5 |        1 | Василеостровский              |         0 |       0 |
     |     6 |        1 | Выборгский                    |         0 |       0 |
     |     7 |        1 | Калининский                   |         0 |       0 |
     |     8 |        1 | Кировский                     |         0 |       0 |
     |     9 |        1 | Красносельский                |         0 |       0 |
     |    10 |        1 | Московский                    |         0 |       0 |
     |    11 |        1 | Невский                       |         0 |       0 |
     |    12 |        1 | Петроградский                 |         0 |       0 |
     |    13 |        1 | Приморский                    |         0 |       0 |
     |    14 |        1 | Фрунзенский                   |         0 |       0 |
     |    15 |        1 | Центральный р-н               |         0 |       0 |
     |    41 |        1 | Красногвардейский             |         0 |       0 |
     |  4333 |     4331 | Лахденпохский р-н             |         0 |       0 |
     |  4334 |     4332 | Чудовский р-н                 |         0 |       0 |
     |  5002 |     5001 | Бокситогорский р-н            |         0 |       0 |
     |  5003 |     5001 | Волосовский р-н               |         0 |       0 |
     |  5004 |     5001 | Волховский р-н                |         0 |       0 |
     |  5005 |     5001 | Всеволожский р-н              |         0 |       0 |
     |  5006 |     5001 | Выборгский р-н                |         0 |       0 |
     |  5007 |     5001 | Гатчинский р-н                |         0 |       0 |
     |  5008 |     5001 | Кингисеппский р-н             |         0 |       0 |
     |  5009 |     5001 | Киришский р-н                 |         0 |       0 |
     |  5010 |     5001 | Кировский р-н                 |         0 |       0 |
     |  5011 |     5001 | Лодейнопольский р-н           |         0 |       0 |
     |  5012 |     5001 | Ломоносовский р-н             |         0 |       0 |
     |  5013 |     5001 | Лужский р-н                   |         0 |       0 |
     |  5014 |     5001 | Подпорожский р-н              |         0 |       0 |
     |  5015 |     5001 | Приозерский р-н               |         0 |       0 |
     |  5016 |     5001 | Сланцевский р-н               |         0 |       0 |
     |  5017 |     5001 | Тихвинский р-н                |         0 |       0 |
     |  5018 |     5001 | Тосненский р-н                |         0 |       0 |
     | 13001 |        1 | Колпинский р-н                |         0 |       0 |
     | 13002 |        1 | Кронштадтский р-н             |         0 |       0 |
     | 13003 |        1 | Курортный р-н                 |         0 |       0 |
     | 13004 |        1 | Петродворцовый р-н            |         0 |       0 |
     | 13005 |        1 | Пушкинский р-н                |         0 |       0 |
     | 15984 |     4332 | Новгородский р-н              |         0 |       0 |
     | 16418 |    16417 | Гдовский р-н                  |         0 |       0 |
     | 16446 |    16417 | Опочецкий р-н                 |         0 |       0 |
     | 16600 |     4332 | Валдайский р-н                |         0 |       0 |
     | 16602 |     4332 | Маловишерский р-н             |         0 |       0 |
     | 16605 |     4332 | Старорусский р-н              |         0 |       0 |
     | 16607 |    16417 | Порховский р-н                |         0 |       0 |
     | 16610 |    16417 | Пушкиногорский р-н            |         0 |       0 |
     | 16624 |     4331 | Прионежский р-н               |         0 |       0 |
     | 16625 |     4331 | Беломорский р-н               |         0 |       0 |
     | 16626 |     4331 | Калевальский р-н              |         0 |       0 |
     | 16627 |     4331 | Кемский р-н                   |         0 |       0 |
     | 16628 |     4331 | Кондопожский р-н              |         0 |       0 |
     | 16630 |     4331 | Лоухский р-н                  |         0 |       0 |
     | 16631 |     4331 | Медвежьегорский р-н           |         0 |       0 |
     | 16632 |     4331 | Муезерский р-н                |         0 |       0 |
     | 16633 |     4331 | Олонецкий р-н                 |         0 |       0 |
     | 16634 |     4331 | Питкярантский р-н             |         0 |       0 |
     | 16635 |     4331 | Пряжинский р-н                |         0 |       0 |
     | 16636 |     4331 | Пудожский р-н                 |         0 |       0 |
     | 16637 |     4331 | Сегежский р-н                 |         0 |       0 |
     | 16638 |     4331 | Суоярвский р-н                |         0 |       0 |
     | 16652 |     4332 | Любытинский р-н               |         0 |       0 |
     | 16653 |    16417 | Бежаницкий р-н                |         0 |       0 |
     | 16654 |    16417 | Псковский р-н                 |         0 |       0 |
     | 16655 |    16417 | Великолукский р-н             |         0 |       0 |
     | 16656 |    16417 | Дедовичский р-н               |         0 |       0 |
     | 16657 |    16417 | Дновский р-н                  |         0 |       0 |
     | 16658 |    16417 | Красногородский р-н           |         0 |       0 |
     | 16660 |    16417 | Локнянский р-н                |         0 |       0 |
     | 16661 |    16417 | Невельский р-н                |         0 |       0 |
     | 16662 |    16417 | Новоржевский р-н              |         0 |       0 |
     | 16663 |    16417 | Новосокольнический р-н        |         0 |       0 |
     | 16664 |    16417 | Островский р-н                |         0 |       0 |
     | 16665 |    16417 | Палкинский р-н                |         0 |       0 |
     | 16666 |    16417 | Печорский р-н                 |         0 |       0 |
     | 16667 |    16417 | Плюсский р-н                  |         0 |       0 |
     | 16668 |    16417 | Пустошкинский р-н             |         0 |       0 |
     | 16669 |    16417 | Пыталовский р-н               |         0 |       0 |
     | 16670 |    16417 | Себежский р-н                 |         0 |       0 |
     | 16671 |    16417 | Струго-Красненский р-н        |         0 |       0 |
     | 16963 |     4332 | Хвойнинский р-н               |         0 |       0 |
     | 17501 |    17500 | Абинский р-н                  |         0 |       0 |
     | 17502 |    17500 | Анапский р-н                  |         0 |       0 |
     | 17503 |    17500 | Апшеронский р-н               |         0 |       0 |
     | 17504 |    17500 | Белоглинский р-н              |         0 |       0 |
     | 17505 |    17500 | Белореченский р-н             |         0 |       0 |
     | 17508 |    17500 | Гулькевичский р-н             |         0 |       0 |
     | 17510 |    17500 | Ейский р-н                    |         0 |       0 |
     | 17514 |    17500 | Кореновский р-н               |         0 |       0 |
     | 17517 |    17500 | Крымский р-н                  |         0 |       0 |
     | 17518 |    17500 | Курганинский р-н              |         0 |       0 |
     | 17520 |    17500 | Лабинский р-н                 |         0 |       0 |
     | 17522 |    17500 | Мостовский р-н                |         0 |       0 |
     | 17523 |    17500 | Новокубанский р-н             |         0 |       0 |
     | 17527 |    17500 | Приморско-Ахтарский р-н       |         0 |       0 |
     | 17528 |    17500 | Северский р-н                 |         0 |       0 |
     | 17529 |    17500 | Славянский р-н                |         0 |       0 |
     | 17532 |    17500 | Темрюкский р-н                |         0 |       0 |
     | 17533 |    17500 | Тимашевский р-н               |         0 |       0 |
     | 17534 |    17500 | Тихорецкий р-н                |         0 |       0 |
     | 17535 |    17500 | Туапсинский р-н               |         0 |       0 |
     | 17536 |    17500 | Успенский р-н                 |         0 |       0 |
     | 17537 |    17500 | Усть-Лабинский р-н            |         0 |       0 |
     | 17538 |    17500 | Щербиновский р-н              |         0 |       0 |
     | 17601 |    17600 | Балашихинский р-н             |         0 |       0 |
     | 17602 |    17600 | Волоколамский р-н             |         0 |       0 |
     | 17603 |    17600 | Воскресенский р-н             |         0 |       0 |
     | 17604 |    17600 | Дмитровский р-н               |         0 |       0 |
     | 17605 |    17600 | Домодедовский р-н             |         0 |       0 |
     | 17606 |    17600 | Егорьевский р-н               |         0 |       0 |
     | 17607 |    17600 | Зарайский р-н                 |         0 |       0 |
     | 17608 |    17600 | Истринский р-н                |         0 |       0 |
     | 17609 |    17600 | Каширский р-н                 |         0 |       0 |
     | 17610 |    17600 | Клинский р-н                  |         0 |       0 |
     | 17612 |    17600 | Красногорский р-н             |         0 |       0 |
     | 17613 |    17600 | Ленинский р-н                 |         0 |       0 |
     | 17614 |    17600 | Лотошинский р-н               |         0 |       0 |
     | 17615 |    17600 | Луховицкий р-н                |         0 |       0 |
     | 17616 |    17600 | Люберецкий р-н                |         0 |       0 |
     | 17617 |    17600 | Можайский р-н                 |         0 |       0 |
     | 17618 |    17600 | Мытищинский р-н               |         0 |       0 |
     | 17619 |    17600 | Наро-Фоминский р-н            |         0 |       0 |
     | 17620 |    17600 | Ногинский р-н                 |         0 |       0 |
     | 17621 |    17600 | Одинцовский р-н               |         0 |       0 |
     | 17622 |    17600 | Озерский р-н                  |         0 |       0 |
     | 17624 |    17600 | Павлово-Посадский р-н         |         0 |       0 |
     | 17626 |    17600 | Пушкинский р-н                |         0 |       0 |
     | 17627 |    17600 | Раменский р-н                 |         0 |       0 |
     | 17628 |    17600 | Рузский р-н                   |         0 |       0 |
     | 17632 |    17600 | Солнечногорский р-н           |         0 |       0 |
     | 17633 |    17600 | Ступинский р-н                |         0 |       0 |
     | 17634 |    17600 | Талдомский р-н                |         0 |       0 |
     | 17635 |    17600 | Химкинский р-н                |         0 |       0 |
     | 17636 |    17600 | Чеховский р-н                 |         0 |       0 |
     | 17637 |    17600 | Шатурский р-н                 |         0 |       0 |
     | 17638 |    17600 | Шаховской р-н                 |         0 |       0 |
     | 17639 |    17600 | Щелковский р-н                |         0 |       0 |
     | 17802 |    17801 | Багратионовский р-н           |         0 |       0 |
     | 17803 |    17801 | Гвардейский р-н               |         0 |       0 |
     | 17804 |    17801 | Гурьевский р-н                |         0 |       0 |
     | 17805 |    17801 | Гусевский р-н                 |         0 |       0 |
     | 17806 |    17801 | Зеленоградский р-н            |         0 |       0 |
     | 17807 |    17801 | Краснознаменский р-н          |         0 |       0 |
     | 17808 |    17801 | Неманский р-н                 |         0 |       0 |
     | 17809 |    17801 | Нестеровский р-н              |         0 |       0 |
     | 17810 |    17801 | Озерский р-н                  |         0 |       0 |
     | 17811 |    17801 | Полесский р-н                 |         0 |       0 |
     | 17812 |    17801 | Правдинский р-н               |         0 |       0 |
     | 17813 |    17801 | Славский р-н                  |         0 |       0 |
     | 17814 |    17801 | Черняховский р-н              |         0 |       0 |
     | 17842 |     4331 | Сортавальский р-н             |         0 |       0 |
     | 17903 |     4332 | Демянский р-н                 |         0 |       0 |
     | 26502 |    26500 | Бабаевский р-н                |         0 |       0 |
     | 26509 |    26500 | Вытегорский р-н               |         0 |       0 |
     | 26522 |    26500 | Устюженский р-н               |         0 |       0 |
     | 26524 |    26500 | Чагодощенский р-н             |         0 |       0 |
     | 26532 |     4332 | Батецкий р-н                  |         0 |       0 |
     | 26533 |     4332 | Боровичский р-н               |         0 |       0 |
     | 26535 |     4332 | Крестецкий р-н                |         0 |       0 |
     | 26536 |     4332 | Марёвский р-н                 |         0 |       0 |
     | 26538 |     4332 | Окуловский р-н                |         0 |       0 |
     | 26539 |     4332 | Парфинский р-н                |         0 |       0 |
     | 26540 |     4332 | Пестовский р-н                |         0 |       0 |
     | 26541 |     4332 | Поддорский р-н                |         0 |       0 |
     | 26542 |     4332 | Солецкий р-н                  |         0 |       0 |
     | 26543 |     4332 | Холмский р-н                  |         0 |       0 |
     | 26544 |     4332 | Шимский р-н                   |         0 |       0 |
     | 26601 |    26600 | Башмаковский р-н              |         0 |       0 |
     | 26603 |    26600 | Беднодемьяновский р-н         |         0 |       0 |
     | 26605 |    26600 | Бековский р-н                 |         0 |       0 |
     | 26607 |    26600 | Белинский р-н                 |         0 |       0 |
     | 26609 |    26600 | Бессоновский р-н              |         0 |       0 |
     | 26611 |    26600 | Вадинский р-н                 |         0 |       0 |
     | 26613 |    26600 | Городищенский р-н             |         0 |       0 |
     | 26615 |    26600 | Земетчинский р-н              |         0 |       0 |
     | 26617 |    26600 | Иссинский р-н                 |         0 |       0 |
     | 26619 |    26600 | Каменский р-н                 |         0 |       0 |
     | 26621 |    26600 | Камешкирский р-н              |         0 |       0 |
     | 26623 |    26600 | Колышлейский р-н              |         0 |       0 |
     | 26625 |    26600 | Кондольский р-н               |         0 |       0 |
     | 26627 |    26600 | Кузнецкий р-н                 |         0 |       0 |
     | 26629 |    26600 | Лопатинский р-н               |         0 |       0 |
     | 26631 |    26600 | Лунинский р-н                 |         0 |       0 |
     | 26633 |    26600 | Малосердобинский р-н          |         0 |       0 |
     | 26635 |    26600 | Мокшанский р-н                |         0 |       0 |
     | 26637 |    26600 | Наровчатский р-н              |         0 |       0 |
     | 26639 |    26600 | Неверкинский р-н              |         0 |       0 |
     | 26641 |    26600 | Нижнеломовский р-н            |         0 |       0 |
     | 26643 |    26600 | Никольский р-н                |         0 |       0 |
     | 26645 |    26600 | Пачелмский р-н                |         0 |       0 |
     | 26647 |    26600 | Сердобский р-н                |         0 |       0 |
     | 26649 |    26600 | Сосновоборский р-н            |         0 |       0 |
     | 26651 |    26600 | Тамалинский р-н               |         0 |       0 |
     | 26653 |    26600 | Шемышейский р-н               |         0 |       0 |
     | 26701 |    26700 | Калининский р-н               |         0 |       0 |
     | 26703 |    26700 | Андреапольский р-н            |         0 |       0 |
     | 26705 |    26700 | Бежецкий р-н                  |         0 |       0 |
     | 26707 |    26700 | Бельский р-н                  |         0 |       0 |
     | 26709 |    26700 | Бологовский р-н               |         0 |       0 |
     | 26711 |    26700 | Весьегонский р-н              |         0 |       0 |
     | 26713 |    26700 | Вышневолоцкий р-н             |         0 |       0 |
     | 26715 |    26700 | Жарковский р-н                |         0 |       0 |
     | 26717 |    26700 | Западнодвинский р-н           |         0 |       0 |
     | 26719 |    26700 | Зубцовский р-н                |         0 |       0 |
     | 26721 |    26700 | Калязинский р-н               |         0 |       0 |
     | 26723 |    26700 | Кашинский р-н                 |         0 |       0 |
     | 26725 |    26700 | Кесовогорский р-н             |         0 |       0 |
     | 26728 |    26700 | Кимрский р-н                  |         0 |       0 |
     | 26730 |    26700 | Конаковский р-н               |         0 |       0 |
     | 26732 |    26700 | Краснохолмский р-н            |         0 |       0 |
     | 26734 |    26700 | Кувшиновский р-н              |         0 |       0 |
     | 26736 |    26700 | Лесной р-н                    |         0 |       0 |
     | 26738 |    26700 | Лихославльский р-н            |         0 |       0 |
     | 26740 |    26700 | Максатихинский р-н            |         0 |       0 |
     | 26742 |    26700 | Молоковский р-н               |         0 |       0 |
     | 26744 |    26700 | Нелидовский р-н               |         0 |       0 |
     | 26746 |    26700 | Оленинский р-н                |         0 |       0 |
     | 26748 |    26700 | Осташковский р-н              |         0 |       0 |
     | 26750 |    26700 | Пеновский р-н                 |         0 |       0 |
     | 26752 |    26700 | Рамешковский р-н              |         0 |       0 |
     | 26754 |    26700 | Ржевский р-н                  |         0 |       0 |
     | 26756 |    26700 | Сандовский р-н                |         0 |       0 |
     | 26758 |    26700 | Селижаровский р-н             |         0 |       0 |
     | 26760 |    26700 | Сонковский р-н                |         0 |       0 |
     | 26762 |    26700 | Спировский р-н                |         0 |       0 |
     | 26764 |    26700 | Старицкий р-н                 |         0 |       0 |
     | 26766 |    26700 | Торжокский р-н                |         0 |       0 |
     | 26768 |    26700 | Торопецкий р-н                |         0 |       0 |
     | 26770 |    26700 | Удомельский р-н               |         0 |       0 |
     | 26772 |    26700 | Фировский р-н                 |         0 |       0 |
     | 26786 |    17500 | Хостинский р-н                |         0 |       0 |
     | 26942 |    26926 | Минераловодский р-н           |         0 |       0 |
     | 26947 |    26926 | Предгорный р-н                |         0 |       0 |
     | 27476 |    27475 | Ивановский р-н                |         0 |       0 |
     | 27486 |    16417 | Плюсская в-ть                 |         0 |       0 |
     | 27601 |    27600 | Ахтубинский р-н               |         0 |       0 |
     | 27604 |    27600 | Володарский р-н               |         0 |       0 |
     | 27606 |    27600 | Енотаевский р-н               |         0 |       0 |
     | 27608 |    27600 | Икрянинский р-н               |         0 |       0 |
     | 27610 |    27600 | Камызякский р-н               |         0 |       0 |
     | 27612 |    27600 | Красноярский р-н              |         0 |       0 |
     | 27614 |    27600 | Лиманский р-н                 |         0 |       0 |
     | 27616 |    27600 | Наримановский р-н             |         0 |       0 |
     | 27618 |    27600 | Приволжский р-н               |         0 |       0 |
     | 27620 |    27600 | Харабалинский р-н             |         0 |       0 |
     | 27622 |    27600 | Черноярский р-н               |         0 |       0 |
     | 27702 |    27700 | Ковдорский р-н                |         0 |       0 |
     | 27704 |    27700 | Кольский р-н                  |         0 |       0 |
     | 27706 |    27700 | Ловозерский р-н               |         0 |       0 |
     | 27708 |    27700 | Печенгский р-н                |         0 |       0 |
     | 27711 |    27700 | Терский р-н                   |         0 |       0 |
     | 27801 |    27800 | Ардатовский р-н               |         0 |       0 |
     | 27802 |    27800 | Арзамасский р-н               |         0 |       0 |
     | 27803 |    27800 | Балахнинский р-н              |         0 |       0 |
     | 27806 |    27800 | Богородский р-н               |         0 |       0 |
     | 27810 |    27800 | Борский р-н                   |         0 |       0 |
     | 27815 |    27800 | Вачский р-н                   |         0 |       0 |
     | 27819 |    27800 | Володарский р-н               |         0 |       0 |
     | 27822 |    27800 | Выксунский р-н                |         0 |       0 |
     | 27825 |    27800 | Городецкий р-н                |         0 |       0 |
     | 27829 |    27800 | Княгининский р-н              |         0 |       0 |
     | 27834 |    27800 | Кстовский р-н                 |         0 |       0 |
     | 27836 |    27800 | Кулебакский р-н               |         0 |       0 |
     | 27838 |    27800 | Лукояновский р-н              |         0 |       0 |
     | 27840 |    27800 | Лысковский р-н                |         0 |       0 |
     | 27842 |    27800 | Навашинский р-н               |         0 |       0 |
     | 27844 |    27800 | Павловский р-н                |         0 |       0 |
     | 27847 |    27800 | Первомайский р-н              |         0 |       0 |
     | 27849 |    27800 | Перевозский р-н               |         0 |       0 |
     | 27851 |    27800 | Пильнинский р-н               |         0 |       0 |
     | 27854 |    27800 | Семеновский р-н               |         0 |       0 |
     | 27856 |    27800 | Сергачский р-н                |         0 |       0 |
     | 27864 |    27800 | Уренский р-н                  |         0 |       0 |
     | 27866 |    27800 | Чкаловский р-н                |         0 |       0 |
     | 28201 |    28200 | Абанский р-н                  |         0 |       0 |
     | 28203 |    28200 | Ачинский р-н                  |         0 |       0 |
     | 28205 |    28200 | Балахтинский р-н              |         0 |       0 |
     | 28207 |    28200 | Березовский р-н               |         0 |       0 |
     | 28209 |    28200 | Бирилюсский р-н               |         0 |       0 |
     | 28211 |    28200 | Боготольский р-н              |         0 |       0 |
     | 28213 |    28200 | Богучанский р-н               |         0 |       0 |
     | 28215 |    28200 | Большемуртинский р-н          |         0 |       0 |
     | 28217 |    28200 | Дзержинский р-н               |         0 |       0 |
     | 28219 |    28200 | Емельяновский р-н             |         0 |       0 |
     | 28221 |    28200 | Енисейский р-н                |         0 |       0 |
     | 28223 |    28200 | Идринский р-н                 |         0 |       0 |
     | 28225 |    28200 | Иланский р-н                  |         0 |       0 |
     | 28227 |    28200 | Ирбейский р-н                 |         0 |       0 |
     | 28229 |    28200 | Казачинский р-н               |         0 |       0 |
     | 28231 |    28200 | Канский р-н                   |         0 |       0 |
     | 28233 |    28200 | Каратузский р-н               |         0 |       0 |
     | 28235 |    28200 | Кежемский р-н                 |         0 |       0 |
     | 28237 |    28200 | Козульский р-н                |         0 |       0 |
     | 28239 |    28200 | Краснотуранский р-н           |         0 |       0 |
     | 28241 |    28200 | Курагинский р-н               |         0 |       0 |
     | 28243 |    28200 | Манский р-н                   |         0 |       0 |
     | 28245 |    28200 | Минусинский р-н               |         0 |       0 |
     | 28247 |    28200 | Мотыгинский р-н               |         0 |       0 |
     | 28249 |    28200 | Назаровский р-н               |         0 |       0 |
     | 28251 |    28200 | Нижнеингашский р-н            |         0 |       0 |
     | 28253 |    28200 | Новоселовский р-н             |         0 |       0 |
     | 28255 |    28200 | Партизанский р-н              |         0 |       0 |
     | 28257 |    28200 | Пировский р-н                 |         0 |       0 |
     | 28259 |    28200 | Рыбинский р-н                 |         0 |       0 |
     | 28261 |    28200 | Саянский р-н                  |         0 |       0 |
     | 28263 |    28200 | Северо-Енисейский р-н         |         0 |       0 |
     | 28265 |    28200 | Сухобузимский р-н             |         0 |       0 |
     | 28267 |    28200 | Тасеевский р-н                |         0 |       0 |
     | 28269 |    28200 | Туруханский р-н               |         0 |       0 |
     | 28271 |    28200 | Тюхтетский р-н                |         0 |       0 |
     | 28273 |    28200 | Ужурский р-н                  |         0 |       0 |
     | 28275 |    28200 | Уярский р-н                   |         0 |       0 |
     | 28277 |    28200 | Шарыповский р-н               |         0 |       0 |
     | 28279 |    28200 | Шушенский р-н                 |         0 |       0 |
     | 40001 |    40000 | Алексинский р-н               |         0 |       0 |
     | 40003 |    40000 | Арсеньевский р-н              |         0 |       0 |
     | 40005 |    40000 | Белевский р-н                 |         0 |       0 |
     | 40007 |    40000 | Богородицкий р-н              |         0 |       0 |
     | 40009 |    40000 | Веневский р-н                 |         0 |       0 |
     | 40011 |    40000 | Воловский р-н                 |         0 |       0 |
     | 40013 |    40000 | Дубенский р-н                 |         0 |       0 |
     | 40015 |    40000 | Ефремовский р-н               |         0 |       0 |
     | 40017 |    40000 | Заокский р-н                  |         0 |       0 |
     | 40019 |    40000 | Каменский р-н                 |         0 |       0 |
     | 40021 |    40000 | Кимовский р-н                 |         0 |       0 |
     | 40023 |    40000 | Киреевский р-н                |         0 |       0 |
     | 40025 |    40000 | Куркинский р-н                |         0 |       0 |
     | 40027 |    40000 | Ленинский р-н                 |         0 |       0 |
     | 40029 |    40000 | Новомосковский р-н            |         0 |       0 |
     | 40031 |    40000 | Одоевский р-н                 |         0 |       0 |
     | 40033 |    40000 | Плавский р-н                  |         0 |       0 |
     | 40035 |    40000 | Суворовский р-н               |         0 |       0 |
     | 40037 |    40000 | Тепло-Огаревский р-н          |         0 |       0 |
     | 40039 |    40000 | Узловский р-н                 |         0 |       0 |
     | 40041 |    40000 | Чернский р-н                  |         0 |       0 |
     | 40044 |    40000 | Щекинский р-н                 |         0 |       0 |
     | 40046 |    40000 | Ясногорский р-н               |         0 |       0 |
     | 40123 |    40122 | Ялта г.                       |         0 |       0 |
     | 41531 |     4000 | Академический р-н             |         0 |       0 |
     | 41532 |     4000 | Алексеевский р-н              |         0 |       0 |
     | 41533 |     4000 | Алтуфьевский р-н              |         0 |       0 |
     | 41534 |     4000 | Арбат р-н                     |         0 |       0 |
     | 41535 |     4000 | Аэропорт р-н                  |         0 |       0 |
     | 41536 |     4000 | Бабушкинский р-н              |         0 |       0 |
     | 41537 |     4000 | Басманный р-н                 |         0 |       0 |
     | 41538 |     4000 | Беговой р-н                   |         0 |       0 |
     | 41539 |     4000 | Бескудниковский р-н           |         0 |       0 |
     | 41540 |     4000 | Бибирево р-н                  |         0 |       0 |
     | 41541 |     4000 | Бирюлёво Восточное р-н        |         0 |       0 |
     | 41542 |     4000 | Бирюлёво Западное р-н         |         0 |       0 |
     | 41543 |     4000 | Богородское р-н               |         0 |       0 |
     | 41544 |     4000 | Братеево р-н                  |         0 |       0 |
     | 41545 |     4000 | Бутырский р-н                 |         0 |       0 |
     | 41546 |     4000 | Вешняки р-н                   |         0 |       0 |
     | 41547 |     4000 | Внуково р-н                   |         0 |       0 |
     | 41548 |     4000 | Войковский р-н                |         0 |       0 |
     | 41549 |     4000 | Дегунино Восточное р-н        |         0 |       0 |
     | 41550 |     4000 | Измайлово Восточное р-н       |         0 |       0 |
     | 41552 |     4000 | Выхино-Жулебино р-н           |         0 |       0 |
     | 41553 |     4000 | Гагаринский р-н               |         0 |       0 |
     | 41554 |     4000 | Головинский р-н               |         0 |       0 |
     | 41555 |     4000 | Гольяново р-н                 |         0 |       0 |
     | 41556 |     4000 | Даниловский р-н               |         0 |       0 |
     | 41557 |     4000 | Дмитровский р-н               |         0 |       0 |
     | 41558 |     4000 | Донской р-н                   |         0 |       0 |
     | 41559 |     4000 | Дорогомилово р-н              |         0 |       0 |
     | 41560 |     4000 | Замоскворечье р-н             |         0 |       0 |
     | 41561 |     4000 | Дегунино Западное р-н         |         0 |       0 |
     | 41562 |     4000 | Зюзино р-н                    |         0 |       0 |
     | 41563 |     4000 | Зябликово р-н                 |         0 |       0 |
     | 41564 |     4000 | Ивановское р-н                |         0 |       0 |
     | 41565 |     4000 | Измайлово р-н                 |         0 |       0 |
     | 41566 |     4000 | Капотня р-н                   |         0 |       0 |
     | 41567 |     4000 | Коньково р-н                  |         0 |       0 |
     | 41568 |     4000 | Коптево р-н                   |         0 |       0 |
     | 41569 |     4000 | Косино-Ухтомский р-н          |         0 |       0 |
     | 41570 |     4000 | Котловка р-н                  |         0 |       0 |
     | 41571 |     4000 | Красносельский р-н            |         0 |       0 |
     | 41572 |     4000 | Крылатское р-н                |         0 |       0 |
     | 41573 |     4000 | Крюково р-н                   |         0 |       0 |
     | 41574 |     4000 | Кузьминки р-н                 |         0 |       0 |
     | 41575 |     4000 | Кунцево р-н                   |         0 |       0 |
     | 41576 |     4000 | Куркино р-н                   |         0 |       0 |
     | 41577 |     4000 | Левобережный р-н              |         0 |       0 |
     | 41578 |     4000 | Лефортово р-н                 |         0 |       0 |
     | 41579 |     4000 | Лианозово р-н                 |         0 |       0 |
     | 41580 |     4000 | Ломоносовский р-н             |         0 |       0 |
     | 41581 |     4000 | Лосиноостровский р-н          |         0 |       0 |
     | 41582 |     4000 | Люблино р-н                   |         0 |       0 |
     | 41583 |     4000 | Марфино р-н                   |         0 |       0 |
     | 41584 |     4000 | Марьина Роща р-н              |         0 |       0 |
     | 41585 |     4000 | Марьино р-н                   |         0 |       0 |
     | 41586 |     4000 | Матушкино р-н                 |         0 |       0 |
     | 41587 |     4000 | Метрогородок р-н              |         0 |       0 |
     | 41588 |     4000 | Мещанский р-н                 |         0 |       0 |
     | 41589 |     4000 | Митино р-н                    |         0 |       0 |
     | 41590 |     4000 | Можайский р-н                 |         0 |       0 |
     | 41591 |     4000 | Молжаниновский р-н            |         0 |       0 |
     | 41592 |     4000 | Москворечье-Сабурово р-н      |         0 |       0 |
     | 41593 |     4000 | Нагатино-Садовники р-н        |         0 |       0 |
     | 41594 |     4000 | Нагатинский Затон р-н         |         0 |       0 |
     | 41595 |     4000 | Нагорный р-н                  |         0 |       0 |
     | 41597 |     4000 | Нижегородский р-н             |         0 |       0 |
     | 41598 |     4000 | Новогиреево р-н               |         0 |       0 |
     | 41600 |     4000 | Ново-Переделкино р-н          |         0 |       0 |
     | 41601 |     4000 | Обручевский р-н               |         0 |       0 |
     | 41602 |     4000 | Орехово-Борисово Северное р-н |         0 |       0 |
     | 41603 |     4000 | Орехово-Борисово Южное р-н    |         0 |       0 |
     | 41604 |     4000 | Останкинский р-н              |         0 |       0 |
     | 41605 |     4000 | Отрадное р-н                  |         0 |       0 |
     | 41606 |     4000 | Очаково-Матвеевское р-н       |         0 |       0 |
     | 41607 |     4000 | Перово р-н                    |         0 |       0 |
     | 41608 |     4000 | Печатники р-н                 |         0 |       0 |
     | 41609 |     4000 | Покровское-Стрешнево р-н      |         0 |       0 |
     | 41610 |     4000 | Преображенское р-н            |         0 |       0 |
     | 41611 |     4000 | Пресненский р-н               |         0 |       0 |
     | 41612 |     4000 | Проспект Вернадского р-н      |         0 |       0 |
     | 41613 |     4000 | Раменки р-н                   |         0 |       0 |
     | 41614 |     4000 | Ростокино р-н                 |         0 |       0 |
     | 41615 |     4000 | Рязанский р-н                 |         0 |       0 |
     | 41616 |     4000 | Савёлки р-н                   |         0 |       0 |
     | 41617 |     4000 | Савёловский р-н               |         0 |       0 |
     | 41618 |     4000 | Свиблово р-н                  |         0 |       0 |
     | 41619 |     4000 | Бутово Северное р-н           |         0 |       0 |
     | 41620 |     4000 | Измайлово Северное р-н        |         0 |       0 |
     | 41621 |     4000 | Медведково Северное р-н       |         0 |       0 |
     | 41622 |     4000 | Тушино Северное р-н           |         0 |       0 |
     | 41623 |     4000 | Северный р-н                  |         0 |       0 |
     | 41624 |     4000 | Силино р-н                    |         0 |       0 |
     | 41625 |     4000 | Сокол р-н                     |         0 |       0 |
     | 41626 |     4000 | Соколиная Гора р-н            |         0 |       0 |
     | 41627 |     4000 | Сокольники р-н                |         0 |       0 |
     | 41628 |     4000 | Солнцево р-н                  |         0 |       0 |
     | 41629 |     4000 | Старое Крюково р-н            |         0 |       0 |
     | 41630 |     4000 | Строгино р-н                  |         0 |       0 |
     | 41631 |     4000 | Таганский р-н                 |         0 |       0 |
     | 41632 |     4000 | Тверской р-н                  |         0 |       0 |
     | 41633 |     4000 | Текстильщики р-н              |         0 |       0 |
     | 41634 |     4000 | Тёплый Стан р-н               |         0 |       0 |
     | 41635 |     4000 | Тимирязевский р-н             |         0 |       0 |
     | 41636 |     4000 | Тропарёво-Никулино р-н        |         0 |       0 |
     | 41637 |     4000 | Филёвский Парк р-н            |         0 |       0 |
     | 41638 |     4000 | Фили-Давыдково р-н            |         0 |       0 |
     | 41639 |     4000 | Хамовники р-н                 |         0 |       0 |
     | 41640 |     4000 | Ховрино р-н                   |         0 |       0 |
     | 41641 |     4000 | Хорошёво-Мнёвники р-н         |         0 |       0 |
     | 41642 |     4000 | Хорошёвский р-н               |         0 |       0 |
     | 41643 |     4000 | Царицыно р-н                  |         0 |       0 |
     | 41644 |     4000 | Черёмушки р-н                 |         0 |       0 |
     | 41645 |     4000 | Чертаново Северное р-н        |         0 |       0 |
     | 41646 |     4000 | Чертаново Центральное р-н     |         0 |       0 |
     | 41647 |     4000 | Чертаново Южное р-н           |         0 |       0 |
     | 41648 |     4000 | Щукино р-н                    |         0 |       0 |
     | 41649 |     4000 | Бутово Южное р-н              |         0 |       0 |
     | 41650 |     4000 | Медведково Южное р-н          |         0 |       0 |
     | 41651 |     4000 | Тушино Южное р-н              |         0 |       0 |
     | 41652 |     4000 | Южнопортовый р-н              |         0 |       0 |
     | 41653 |     4000 | Якиманка р-н                  |         0 |       0 |
     | 41654 |     4000 | Ярославский р-н               |         0 |       0 |
     | 41655 |     4000 | Ясенево р-н                   |         0 |       0 |
     | 41924 |    41923 | Дзержинский р-н               |         0 |       0 |
     | 41967 |    41961 | Кировский р-н                 |         0 |       0 |
     | 42025 |     4000 | Метрогородок р-н              |         0 |       0 |
     | 42204 |    42202 | Коминтерновский р-н           |         0 |       0 |

**** Метро

     #+CAPTION: Метро - схема данных
     #+NAME: subway_flds
     | field     | field type           | note                   |
     |-----------+----------------------+------------------------|
     | id        | smallint(6) unsigned | Числовой идентификатор |
     | name      | varchar(255)         | Название станции       |
     | line      | varchar(10)          | Линия метро            |
     | sortIndex | tinyint(4) unsigned  | Индекс сортировки      |
     | deleted   | tinyint(1)           | Признак удаления       |


     #+CAPTION: Метро - данные
     #+NAME: subway_data
     | id | name                        | line | sortIndex | deleted |
     |----+-----------------------------+------+-----------+---------|
     |  1 | Автово                      |    1 |         0 |       0 |
     |  2 | Адмиралтейская              |    5 |         0 |       0 |
     |  3 | Академическая               |    1 |         0 |       0 |
     |  4 | Балтийская                  |    1 |         0 |       0 |
     |  5 | Бухарестская                |    5 |         0 |       0 |
     |  6 | Василеостровская            |    3 |         0 |       0 |
     |  7 | Владимирская                |    1 |         0 |       0 |
     |  8 | Волковская                  |    5 |         0 |       0 |
     |  9 | Выборгская                  |    1 |         0 |       0 |
     | 10 | Горьковская                 |    2 |         0 |       0 |
     | 11 | Гостиный двор               |    3 |         0 |       0 |
     | 12 | Гражданский проспект        |    1 |         0 |       0 |
     | 13 | Девяткино                   |    1 |         0 |       0 |
     | 14 | Достоевская                 |    4 |         0 |       0 |
     | 15 | Елизаровская                |    3 |         0 |       0 |
     | 16 | Звездная                    |    2 |         0 |       0 |
     | 17 | Звенигородская              |    5 |         0 |       0 |
     | 18 | Канал Грибоедова            |    2 |         0 |       0 |
     | 19 | Кировский завод             |    1 |         0 |       0 |
     | 20 | Комендантский проспект      |    5 |         0 |       0 |
     | 21 | Крестовский остров          |    5 |         0 |       0 |
     | 22 | Купчино                     |    2 |         0 |       0 |
     | 23 | Ладожская                   |    4 |         0 |       0 |
     | 24 | Ленинский проспект          |    1 |         0 |       0 |
     | 25 | Лесная                      |    1 |         0 |       0 |
     | 26 | Лиговский проспект          |    4 |         0 |       0 |
     | 27 | Ломоносовская               |    3 |         0 |       0 |
     | 28 | Маяковская                  |    3 |         0 |       0 |
     | 29 | Международная               |    5 |         0 |       0 |
     | 30 | Московская                  |    2 |         0 |       0 |
     | 31 | Московские ворота           |    2 |         0 |       0 |
     | 32 | Нарвская                    |    1 |         0 |       0 |
     | 33 | Невский проспект            |    2 |         0 |       0 |
     | 34 | Новочеркасская              |    4 |         0 |       0 |
     | 35 | Обводный канал              |    5 |         0 |       0 |
     | 36 | Обухово                     |    3 |         0 |       0 |
     | 37 | Озерки                      |    2 |         0 |       0 |
     | 38 | Парк победы                 |    2 |         0 |       0 |
     | 39 | Парнас                      |    2 |         0 |       0 |
     | 40 | Петроградская               |    2 |         0 |       0 |
     | 41 | Пионерская                  |    2 |         0 |       0 |
     | 42 | Площадь Александра Невского |    3 |         4 |       0 |
     | 43 | Площадь Восстания           |    1 |         0 |       0 |
     | 44 | Площадь Ленина              |    1 |         0 |       0 |
     | 45 | Площадь Мужества            |    1 |         0 |       0 |
     | 46 | Политехническая             |    1 |         0 |       0 |
     | 47 | Приморская                  |    3 |         0 |       0 |
     | 48 | Пролетарская                |    3 |         0 |       0 |
     | 49 | Проспект Большевиков        |    4 |         0 |       0 |
     | 50 | Проспект Ветеранов          |    1 |         0 |       0 |
     | 51 | Проспект Просвещения        |    2 |         0 |       0 |
     | 52 | Пушкинская                  |    1 |         0 |       0 |
     | 53 | Рыбацкое                    |    3 |         0 |       0 |
     | 54 | Садовая                     |    5 |         0 |       0 |
     | 55 | Сенная площадь              |    2 |         0 |       0 |
     | 56 | Спасская                    |    4 |         0 |       0 |
     | 57 | Спортивная                  |    5 |         0 |       0 |
     | 58 | Старая деревня              |    5 |         0 |       0 |
     | 59 | Технологический институт    |    1 |         2 |       0 |
     | 60 | Удельная                    |    2 |         0 |       0 |
     | 61 | Улица Дыбенко               |    4 |         0 |       0 |
     | 62 | Фрунзенская                 |    2 |         0 |       0 |
     | 63 | Черная Речка                |    2 |         0 |       0 |
     | 64 | Чернышевская                |    1 |         0 |       0 |
     | 65 | Чкаловская                  |    5 |         0 |       0 |
     | 66 | Электросила                 |    2 |         0 |       0 |
**** Корпуса ЖК

     #+CAPTION: Корпуса - схема данных
     #+NAME: block_flds
     | field          | field type           | note                                                  |
     |----------------+----------------------+-------------------------------------------------------|
     | id             | binary(16)           | Идентификатор в виде GUID-а                           |
     | nb_sourceId    | tinyint(4) unsigned  | Идентификатор источника данных reftbl:nb_source       |
     | nb_complexId   | binary(16)           | Идентификатор комплекса в виде GUID-а                 |
     | statusId       | tinyint(4) unsigned  | Статус комплекса reftbl:status                        |
     | status_buildId | tinyint(4) unsigned  | Статус в котором находится корпус reftbl:status_build |
     | house          | varchar(15)          | Дом                                                   |
     | block          | varchar(15)          | Корпус дома                                           |
     | litera         | varchar(50)          | Литера                                                |
     | floors         | varchar(20)          | Этажность                                             |
     | quarter_end    | tinyint(4) unsigned  | Квартал окончания постройки                           |
     | year_end       | smallint(6) unsigned | Год окончания постройки                               |
     | house_typeId   | tinyint(4) unsigned  | Тип дома reftbl:? - Нет таблицы с типами домов        |
     | bknId          | binary(16)           | Привязка к БКН-овскому корпусу                        |

     Типы домов (=house_typeId=) могут быть:
     - Блочный
     - Индивидуальный
     - Кирпично-монолитный
     - Кирпичный
     - Монолитный
     - Панельно-монолитный
     - Панельный

**** Данные корпусов ЖК

     Здесь мы соберем все данные которые у нас есть по всем жилым комплексам. Все активные комплексы
     можно получить вот таким запросом:

     #+name: query_get_blocks
     #+header: :engine mysql
     #+header: :dbhost bkn.ru
     #+header: :dbport 3306
     #+header: :dbuser root
     #+header: :dbpassword YGAhBawd1j~SANlw"Y#l
     #+header: :database bkn_base
     #+begin_src sql :results output table d
       select toguid(id), nb_sourceId, toguid(nb_complexId), statusId, status_buildId, house, block, litera, floors, quarter_end, year_end, house_typeId, bknId from nb_block limit 200000;
     #+end_src

     #+NAME: blocks_data
     #+BEGIN_SRC emacs-lisp :var table=query_get_blocks :results output :exports none
       (mapcar #'(lambda (x)
                   (princ (format "***** Корпус %s \n\n" (first x)))
                   (princ (format "      #+CAPTION: Корпус %s\n" (first x)))
                   (princ (format "      #+NAME: BLOCK-DATA-%s\n" (first x)))
                   (princ (format "      | id             | %s | \n" (let ((tmp (nth 00 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | nb_sourceId    | %s | \n" (let ((tmp (nth 01 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | nb_complexId   | %s | \n" (let ((tmp (nth 02 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | statusId       | %s | \n" (let ((tmp (nth 03 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | status_buildId | %s | \n" (let ((tmp (nth 04 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | house          | %s | \n" (let ((tmp (nth 05 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | block          | %s | \n" (let ((tmp (nth 06 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | litera         | %s | \n" (let ((tmp (nth 07 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | floors         | %s | \n" (let ((tmp (nth 08 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | quarter_end    | %s | \n" (let ((tmp (nth 09 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | year_end       | %s | \n" (let ((tmp (nth 10 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | house_typeId   | %s | \n" (let ((tmp (nth 11 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "      | bknId          | %s | \n" (let ((tmp (nth 12 x))) (if (string= "NULL" tmp) "" tmp))))
                   (princ (format "\n")))
               table)
     #+END_SRC

**** TODO | status_build
**** TODO Оставшиеся таблицы

     | Tables_in_bkn_base |
     |--------------------|
     | advertising        |
     | decoration         |
     | developer_banks    |
     | developer_customs  |
     | nb_appartment      |
     | nb_contacts        |
     | nb_photos          |
     | obj_type_p         |
     | status_build       |
     | test_log           |
     | wc                 |

*** Переуступки
*** Квартиры на вторичном рынке
*** Комнаты
*** Загородные участки
*** Загородные дома

** Аренда
* Переделать

  Субсидии, ипотека и рассрочка должные отноститься не к очереди а к корпусу.

  одна и та же планировка может быть в двух очередях и даже в двух комплексах.

* Бизнес-процесс и цели

  Мы делаем сайт-аггрегатор всех квартир-новостроек в С-Пб.

  Есть застройщики, они строят и продают квартиры. Но для того чтобы реализовать объем квартир они
  не только используют свой отдел продаж, но и привлекают агенства реализации квартир за комиссию
  (агентское вознаграждение)

  Многие застройщики работают с 3-5 крупных агенств, которые в свою очередь привлекают других
  субагентов за комиссию.

  Цель сайта для нашей компании - инициировать обращение посетителя в компанию.

  Цель пользователя - найти квартиру под его возможности и потребности. На сайте пользователю
  предоставляется не вся информация по квартире, чтобы он имел стимул обратиться в нашу компанию,
  где его обработает менеджер по продажам.

  Посетитель на сайте выполняет поиск квартиры (основной пользовательский сценарий). Посетитель
  может выполнить расчет ипотеки, продать свою квартиру, заказать просмотр квартир итп
  (дополнительные сценарии).

  Цель сайта для менеджера - найти квартиру под любые параметры клиента и обеспечить ответ на
  любые вопросы клиента по застройщику и квартире.

  Причины обращений частных клиентов:
  - большой выбор и возможность получить ответы на все вопросы
  - ипотечный центр (берет на себя сложности с ипотекой)
  - показ квартир, который осуществляет компания:
    - индивидуальный показ (на автомобиле)
    - автобусные туры (срез по району) в выходные
  - реализация квартир клиентов (чтобы купить квартиру, клиенту иногда надо
    продать квартиру)
  - Люди не покупают квартиры с сайта. Им психологически сложно расстаться с такой большой суммой
    денег, поэтому они ищут иллюзии понимания этого рынка, которую предоставляет им менеджер
    компании.
  - Вторичку вообще продают через знакомых агентов. Поэтому практически единственное бизнес-value
    агенств вторички - широта связей их менеджеров. Все продается только через знакомых.

  Взаимодействие с застройщиками:
  - Застройщики регулярно отправляют информацию о объектах (или мы ее самостоятельно забираем). У
    поставщиков информация представлена в очень разных форматах. Мы конкурируем с отделом продаж
    застройщиков, поэтому они не заинтересованы предоставлять нам данные в нашем формате.
  - Небольшая часть застройщиков предоставляет данные через т.н. "агентский портал", куда
    менеджер компании может попасть по логину и паролю.
  - У ряда застройщиков есть достаточно актуальное наличие планировок на сайте.
  - Мы сопровождаем договора клиентов с застройщиком.

  Взаимодействие с агентствами:
  - Мы выступаем для суб-агентов в роли застройщика, отправляя им данные о квартирах.
  - Отдел диллерских продаж принимает обращения от агенств, бронируют квартиры.

  Стратегия: Сумма проданных компанией квартир = кол-во обращений клиентов компании * конверсия
  отдела продаж * кол-во менеджеров.

  Новый сайт необходим чтобы увеличить конверсию клик-обращение, и конверсию отдела продаж.

  Компания также хочет чтобы сайт был для пользователя более ценным чем сайты застройщиков, для
  этого планируются дополнительные сервисы - ипотечный калькулятор, расчет инвестиционной
  привлекательности, итп.

  Компания считает что сможет также сократить время обучения используя новый сайт.

  Какая-то часть обработки информации будет производиться контент-менеджерами вручную. Необходимо
  заложить возможности для них. Например: У застройщика есть базовая цена квартиры и регламент -
  как рассчитывать стоимость квартир, иногда очень сложный. Менеджер по развитию проектов должен
  иметь возможность создавать набор правил применяющихся в определенном порядке.

  Менеджер по продаже должен иметь возможность на странице квартиры накидать скидок (иногородний
  покупатель, итп), влиящих на цену квартиры. Это очень важное бизнес-требование.

  С точки зрения бизнес-процесса, продуктом компании яаляется специалист по недвижимости. Его
  время покупает клиент. Поэтому компания заинтересована:
  - Занять нишу ресурса, который позволяет выбрать квартиру в новостройке С-Пб.
  - Сэкономить на обучении специалистов.
  Основные проблемы на этом пути:
  - Товарная линейка ограничена
  - Актуальность данных
  - Юзабилити

* Пользователи и роли

  Пользователи объединены в роли по реализуемым на сайте сценариям. Некоторые сценарии
  являются общими для нескольких ролей, так например и =посетитель= и =менеджер= выполняют
  на сайте сценарии поиска квартир.

  Если кто-то логинится под логином и паролем под которым в данный момент сидит другой
  пользователь - реализуем перехват сессии - старый пользователь автоматически теряет
  сессию.

  Логин и пароль нужен и посетителю. Но он не будет регистрироваться, а скорее отправит на
  почту себе письмо со ссылкой на варианты которые он выбрал в избранном и сравнении.

  Роли и их типичные сценарии:
  - Посетитель
    - Поиск квартиры
    - Сравнение
    - Добавление в избранное
    - Печать
    - ...
  - Менеджер компании
    - Поиск квартиры
    - Сравнение
    - Добавление в избранное - избранное нужно как-то шарить клиенту.
    - Печать
    - ...
  - Контент-менеджер
    - Забивает информацию в базу
  - Менеджеры по развитию (продукт-менеджеры)
    - Создают правила расчета цен
    - Проверяют (пока раз в месяц) качество работы контент-менеджеров.
  - Менеджер субагента
    выпоняет примерно те же задачи что менеджер по продажам компании, но, возможно,
    использует
    меньше данных, чем сотрудник компании
  - Администратор сайта
    - Управляет пользователями
  - Робот
    - Загрузка данных со сторонних сайтов
    - Выгрузка данных на рекламные ресурсы

* Определения сущностей
** DONE Жилой комплекс (cmpx)

   Эта сущность нужна только чтобы объединять очереди жилого комплекса

   #+CAPTION: Данные жилого комплекса
   #+NAME: cmpx_data
     | field name  | field type           | note                 |
     |-------------+----------------------+----------------------|
     | id          | serial               | идентификатор        |
     | name        | varchar              | название             |
     | addr        | (or db-null varchar) | адрес                |
     | district-id | (or db-null integer) | идентификатор района |
     | metro-id    | (or db-null integer) | идентификатор метро  |


   #+NAME: cmpx_flds
   #+BEGIN_SRC emacs-lisp :var table=cmpx_data :results value :exports none :session gen
     table
   #+END_SRC

** DONE Очередь жилого комплекса (plex)

   #+CAPTION: Данные очереди жилого комплекса
   #+NAME: plex_data
     | field name  | field type           | note                           |
     |-------------+----------------------+--------------------------------|
     | id          | serial               | идентификатор                  |
     | cmpx-id     | integer              | идентификатор жилого комплекса |
     | name        | (or db-null varchar) | название                       |
     | distance    | (or db-null varchar) | расстояние до метро            |
     | deadline-id | (or db-null integer) | срок сдачи                     |
     | subsidy     | (or db-null boolean) | субсидия                       |
     | finishing   | (or db-null varchar) | отделка                        |
     | ipoteka     | (or db-null boolean) | ипотека                        |
     | installment | (or db-null boolean) | рассрочка                      |

   #+NAME: plex_flds
   #+BEGIN_SRC emacs-lisp :var table=plex_data :results value :exports none :session gen
     table
   #+END_SRC

** DONE Корпус очереди жилого комплекса (crps)

   #+CAPTION: Данные корпуса очереди жилого комплекса
   #+NAME: crps_data
     | field name | field type           | note                                   |
     |------------+----------------------+----------------------------------------|
     | id         | serial               | идентификатор                          |
     | plex-id    | integer              | идентификатор очереди жилого комплекса |
     | name       | (or db-null varchar) | название (номер корпуса)               |

   #+NAME: crps_flds
   #+BEGIN_SRC emacs-lisp :var table=crps_data :results value :exports none :session gen
     table
   #+END_SRC

** DONE Планировка (flat)

   #+CAPTION: Данные планировки
   #+NAME: flat_data
     | field name   | field type           | note                                           |
     |--------------+----------------------+------------------------------------------------|
     | id           | serial               | идентификатор                                  |
     | crps-id      | (or db-null integer) | идентификатор корпуса очереди жилого комплекса |
     | rooms        | (or db-null integer) | кол-во комнат                                  |
     | area-sum     | (or db-null varchar) | общая площадь квартиры (может быть дробное)    |
     | area-living  | (or db-null varchar) | жилая площадь квартиры (именно varchar)        |
     | area-kitchen | (or db-null varchar) | площадь кухни (может быть дробное)             |
     | price        | (or db-null integer) | цена                                           |
     | balcon       | (or db-null varchar) | балкон/лоджия                                  |
     | sanuzel      | (or db-null boolean) | Санузел раздельный/совмещенный                 |

   #+NAME: flat_flds
   #+BEGIN_SRC emacs-lisp :var table=flat_data :results value :exports none :session gen
     table
   #+END_SRC

** DONE Город (city)

   Город в котором находится объект

   #+CAPTION: Данные города
   #+NAME: city_data
     | field name | field type | note            |
     |------------+------------+-----------------|
     | id         | serial     | идентификатор   |
     | name       | varchar    | название города |

   #+NAME: city_flds
   #+BEGIN_SRC emacs-lisp :var table=city_data :results value :exports none :session gen
     table
   #+END_SRC

** DONE Район (district)

   Район города, в котором находится объект

   #+CAPTION: Данные района
   #+NAME: district_data
     | field name  | field type | note                                     |
     |-------------+------------+------------------------------------------|
     | id          | serial     | идентификатор                            |
     | name        | varchar    | название района |

   #+NAME: district_flds
   #+BEGIN_SRC emacs-lisp :var table=district_data :results value :exports none :session gen
     table
   #+END_SRC

** DONE Метро (metro)

   Метро неподалеку от объекта

   #+CAPTION: Данные метро
   #+NAME: metro_data
     | field name | field type | note             |
     |------------+------------+------------------|
     | id         | serial     | идентификатор    |
     | name       | varchar    | название станции |

   #+NAME: metro_flds
   #+BEGIN_SRC emacs-lisp :var table=metro_data :results value :exports none :session gen
     table
   #+END_SRC

** DONE Сроки сдачи (deadline)

   Сроки сдачи объектов

   #+CAPTION: Данные метро
   #+NAME: deadline_data
     | field name | field type | note             |
     |------------+------------+------------------|
     | id         | serial     | идентификатор    |
     | name       | varchar    | название станции |

   #+NAME: deadline_flds
   #+BEGIN_SRC emacs-lisp :var table=deadline_data :results value :exports none :session gen
     table
   #+END_SRC

** TODO Картинки очередей ЖК
** TODO Картинки планировок
** TODO Картинки хода строительства
* Загрузка данных

  В папке =./data= лежат ЖК, в каждом из них есть подпапки, в которых лежат очереди. Очереди
  в себе содержат подпапки, содержащие изображения:
  - Планировки
  - Рендеры
  - Ход строительства
  и файлы:
  - паспорт.txt - паспорт объекта
  - описание.txt - описание объекта
  - местоположение
  - комфорт
  - квартиры, в формате CSV
    |  корпус | тип | метраж | жилая площадь| площадь кухни | балкон/лоджия | санузел | цена |

** DONE Утилиты
   Напишем проход по всем этим директориям, но перед этим необходимо определить ряд
   вспомогательных макросов и функций.

   Начнем с макроса поиска файла в наборе. В случае, если файл найден, мы выполняем body

   #+NAME: awhen_file
   #+BEGIN_SRC lisp :noweb tangle :exports none
     (in-package #:moto)

     (defmacro awhen-file ((file files) &body body)
       `(aif (find ,file ,files :test #'string=)
             ,@body
             ""))
   #+END_SRC

   Нам также понадобится цикл внутри директории, который умеет предоставлять нам
   поддиректории и файловое содержимое этих предоставленных поддиректорий.

   #+NAME: loop_dir
   #+BEGIN_SRC lisp :noweb tangle :exports none
     (in-package #:moto)

     (defmacro loop-dir (var (&rest path) &body body)
       `(loop :for ,var :in (mapcar #'(lambda (x) (car (last (ppcre:split "\/" (directory-namestring x)))))
                                    (explore-dir (format nil "~A~{~A/~}*.*" *data-path* (list ,@path)))) :do
           (multiple-value-bind (_ files)
               (explore-dir (format nil "~A~{~A/~}~A/*.*" *data-path* (list ,@path) ,var))
             (declare (ignore _))
             (let ((files (mapcar #'(lambda (x) (car (last (ppcre:split "\/" (file-namestring x)))))
                                  files)))
               ,@body))))
   #+END_SRC

   Еще маленький вспомогательный макрос для извлечения значения по ключу из ассоциативного
   списка:

   #+NAME: assoc_key
   #+BEGIN_SRC lisp :noweb tangle :exports none
     (in-package #:moto)

     (defmacro assoc-key (key alist)
       `(cdr (assoc ,key ,alist :test #'string=)))
   #+END_SRC

   Для работы с данными, извлекаемыми из файлов в формате ключ:значение напишем
   функцию-парсер:

   #+NAME: keyval
   #+BEGIN_SRC lisp :noweb tangle :exports none
     (in-package #:moto)

     (defun keyval (filename)
       (remove-if #'null
                  (mapcar #'(lambda (in)
                              (let* ((pos (position #\: in :test #'char=)))
                                (if (null pos)
                                    (warn (format nil "wrong param: ~A" in))
                                    (let ((key (subseq in 0 pos))
                                          (val (subseq in (+ 1 pos))))
                                      (cons (string-trim '(#\Space #\Tab #\Newline)
                                                         (ppcre:regex-replace-all "\\s+" key " "))
                                            (string-trim '(#\Space #\Tab #\Newline)
                                                         (ppcre:regex-replace-all "\\s+" val " ")))))))
                          (ppcre:split #\Newline (alexandria:read-file-into-string filename)))))
   #+END_SRC

   Для работы с xls-файлами напишем парсер и декодер:

   #+NAME: xls
   #+BEGIN_SRC lisp :noweb tangle :exports none
    (in-package #:moto)

    (defun decoder-3-csv  (in-string)
      "Второе возвращаемое значение показывает, была ли закрыта кавычка, или строка
           закончилась посередине обрабатываемой ячейки, что указывает на разрыв строки"
      (let ((err))
        (values
         (mapcar #'(lambda (y) (string-trim '(#\Space #\Tab) y))
                 (mapcar #'(lambda (y) (ppcre:regex-replace-all "\\s+" y " "))
                         (mapcar #'(lambda (y) (string-trim '(#\Space #\Tab #\") y))
                                 (let ((inp) (sav) (acc) (res))
                                   (loop :for cur :across in-string do
                                      ;; (print cur)
                                      (if (null inp)
                                          (cond ((equal #\" cur) (progn (setf inp t)
                                                                        ;; (print "open quote : inp t")
                                                                        ))
                                                ((equal #\, cur)  (progn (push "" res)
                                                                         ;; (print "next")
                                                                         ))
                                                ;; (t (print "unknown sign out of quite"))
                                                )
                                          ;; else
                                          (cond ((and (null sav) (equal #\" cur)) (progn (setf sav t)
                                                                                         ;; (print "close quote : sav t")
                                                                                         ))
                                                ((and sav (equal #\" cur)) (progn (setf sav nil)
                                                                                  ;; (print (list ".." #\"))
                                                                                  (push #\" acc)))
                                                ((and sav (equal #\, cur)) (progn (setf sav nil)
                                                                                  (setf inp nil)
                                                                                  (push (coerce (reverse acc) 'string) res)
                                                                                  ;; (print "inp f")
                                                                                  (setf acc nil)))
                                                ((equal #\Return cur)      nil)
                                                (t (progn (push cur acc)
                                                          ;; (print (list "." cur))
                                                          )))))
                                   (when acc
                                     ;; незакрытая кавычка
                                     (if (and inp (null sav))
                                         (setf err t))
                                     ;; (print (list ":" inp sav acc res))
                                     (push (coerce (reverse acc) 'string) res))
                                   (reverse res)))))
         err)))

    (defun xls-processor (infile)
      (let* ((result)
             (output (with-output-to-string (*standard-output*)
                       (let* ((proc (sb-ext:run-program "/usr/bin/xls2csv"
                                                        (list "-q3" (format nil "~a" infile)) :wait nil :output :stream)))
                         (with-open-stream (in (sb-ext:process-output proc))
                           (loop :for i from 1 do
                              (tagbody loop-body
                                 (handler-case
                                     (let ((in-string (read-line in)))
                                       (format nil "~A" in-string)
                                       ;; начинаем декодировать
                                       (tagbody start-decoding
                                          (multiple-value-bind (line err-string-flag)
                                              (decoder-3-csv in-string)
                                            (when err-string-flag
                                              (setf in-string (concatenate 'string in-string (read-line in)))
                                              ;; (format t "~%warn-broken-string [~a] ~a~%" i in-string)
                                              (incf i)
                                              (go start-decoding))
                                            (format t "~%~%str: ~a~%lin: ~a" in-string (bprint line))
                                            (unless (null line)
                                              (handler-case
                                                  (push line result)
                                                (SB-INT:SIMPLE-PARSE-ERROR () nil))
                                              )))
                                       )
                                   (END-OF-FILE () (return i)))))))
                       )))
        (declare (ignore output))
        ;; output
        (reverse result)))
  #+END_SRC

** DONE Загрузчик

   Теперь переходим к загрузке данных:

   #+NAME: loader
   #+BEGIN_SRC lisp :noweb tangle :exports none
     (in-package #:moto)
     <<awhen_file>>
     <<loop_dir>>
     <<assoc_key>>
     <<keyval>>
     <<xls>>

     ;; (defun clear-db-trend ()
     ;;   (let ((tables '("cmpx" "plex" "crps" "flat")))
     ;;     (flet ((rmtbl (tblname)
     ;;              (when (with-connection *db-spec*
     ;;                      (query (:select 'table_name :from 'information_schema.tables :where
     ;;                                      (:and (:= 'table_schema "public")
     ;;                                            (:= 'table_name tblname)))))
     ;;                (with-connection *db-spec*
     ;;                  (query (:delete-from (intern (string-upcase tblname))))))))
     ;;       (loop :for tblname :in tables :collect
     ;;          (rmtbl tblname)))))

     ;; (defun load-data ()
     ;;   (clear-db-trend)
     ;;   ;; Для каждой подпапке в папке данных..
     ;;   (loop-dir cmpx ()
     ;;      ;; Создаем комплекс и заполняем адрес, если удалось найти соответствующий файл
     ;;        (format t "~%-~A" cmpx)
     ;;        (let ((cmpx-id (id (make-cmpx :name cmpx))))
     ;;          ;; Если найден файл с данными ЖК - обновим созданную очередь ЖК
     ;;          (awhen-file ("complex.txt" files)
     ;;            ;; Прочитать, разбить построчно, отделить ключи от значений, убрать ведущие, ведомые и повторяющиеся пробелы
     ;;            (let ((complex (keyval (format nil "~A~A/~A" *data-path* cmpx it))))
     ;;              (format t "~% ~A - ~A" it (bprint complex))
     ;;              (upd-cmpx (get-cmpx cmpx-id)
     ;;                        (list
     ;;                         :addr (assoc-key "Адрес" complex)
     ;;                         :district-id (let ((obj (find-district :name (assoc-key "Район" complex))))
     ;;                                        (if (null obj)
     ;;                                            (warn (format nil "Район ~A не найден в таблице районов" (assoc-key "Район" complex)))
     ;;                                            (id (car obj))))
     ;;                         :metro-id    (let ((obj (find-metro :name (assoc-key "Метро" complex))))
     ;;                                        (if (null obj)
     ;;                                            (warn (format nil "Метро ~A не найдено в таблице метро" (assoc-key "Метро" complex)))
     ;;                                            (id (car obj))))))))
     ;;          ;; Для каждой подпапки в папке комплекса, кроме планировок, рендеров и хода строительства:
     ;;          (loop-dir plex (cmpx)
     ;;               (unless (or (string= plex "Планировки")
     ;;                           (string= plex "Рендеры")
     ;;                           (string= plex "Ход строительства"))
     ;;                 ;; Создаем очередь ЖК
     ;;                 (format t "~%--~A" plex)
     ;;                 (let ((plex-id (id (make-plex :name plex :cmpx-id cmpx-id))))
     ;;                   ;; Если найден файл с данными очереди ЖК - обновим созданную очередь ЖК
     ;;                   (awhen-file ("data.txt" files)
     ;;                     (let ((data (keyval (format nil "~A~A/~A/~A" *data-path* cmpx plex it))))
     ;;                       (format t "~%  ~A - ~A" it (bprint data))
     ;;                       (upd-plex (get-plex plex-id)
     ;;                                 ;; (assoc-key "Срок сдачи" '(("﻿Срок сдачи" . "2 квартал 2015") ("Субсидия" . "")
     ;;                                 ;;                           ("Отделка" . "предчистовая") ("Ипотека" . "да") ("Рассрочка" . "да")
     ;;                                 ;;                           ("Расстояние до метро" . "1.7 км (21 мин пешком)")))
     ;;                                 (list :deadline-id (let ((dd (assoc-key "Срок сдачи" data)))
     ;;                                                      (format t "~%   dd: ~A | ~A"
     ;;                                                              dd
     ;;                                                              (awhen (find-deadline :name (assoc-key "Срок сдачи" data))
     ;;                                                                (id (car it))))
     ;;                                                      (awhen (find-deadline :name (assoc-key "Срок сдачи" data))
     ;;                                                        (id (car it))))
     ;;                                       :finishing   (assoc-key "Отделка" data)
     ;;                                       :ipoteka     (or (string= "да" (assoc-key "ипотека" data)))
     ;;                                       :installment (or (string= "да" (assoc-key "рассрочка" data)))
     ;;                                       :subsidy     (or (string= "да" (assoc-key "субсидия" data)))
     ;;                                       :distance    (assoc-key "Расстояние до метро" data)))
     ;;                       (format t "~%   rr: ~A" (deadline-id (get-plex plex-id)))
     ;;                       ))
     ;;                   ;; Для каждой подпапки в папке очереди ЖК, кроме планировок, рендеров и хода строительства:
     ;;                   (loop-dir crps (cmpx plex)
     ;;                        (unless (or (string= crps "Планировки")
     ;;                                    (string= crps "Рендеры")
     ;;                                    (string= crps "Ход строительства"))
     ;;                          ;; Создаем корпус
     ;;                          (format t "~%---~A" crps)
     ;;                          (let ((crps-id (id (make-crps :name crps :plex-id plex-id))))
     ;;                            ;; Если найден файл с планировками объекта
     ;;                            (awhen-file ("квартиры.xls" files)
     ;;                              (loop :for item :in (cdr (xls-processor (format nil "~A~A/~A/~A/~A" *data-path* cmpx plex crps it))) :do
     ;;                                 (format t "~%   ~A" (bprint item))
     ;;                                 (make-flat :crps-id crps-id
     ;;                                            :rooms (parse-integer (nth 0 item))
     ;;                                            :area-sum (nth 1 item)
     ;;                                            :area-living (nth 2 item)
     ;;                                            :area-kitchen (nth 3 item)
     ;;                                            :balcon (nth 4 item)
     ;;                                            :sanuzel (if (string= "" (nth 5 item)) t nil)
     ;;                                            :price (parse-integer (nth 6 item)))))))))))))
     ;;   (format t "~%-=finish=-"))

     ;; (load-data)
   #+END_SRC

* Шаблоны

  #+NAME: trendtpl_contents
  #+BEGIN_SRC closure-template-html :comments link :noweb tangle :exports none
    // -*- mode: closure-template-html; fill-column: 140 -*-
    {template root}
    <!DOCTYPE HTML>{\n}
    <html lang="en-US{\n}
    <head>{\n}
        <meta charset="UTF-8{\n}
        <meta http-equiv="X-UA-Compatible" content="IE=edge{\n}
        <title>{$headtitle}</title>{\n}
        <link href="css/bootstrap.min.css" rel="stylesheet{\n}
        <link rel="stylesheet" type="text/css" href="css/not-responsive.css" media="all" />{\n}
        <link rel="stylesheet" type="text/css" href="css/theme.css" media="all" />{\n}
        <link rel="stylesheet" type="text/css" href="css/fonts.css" media="all" />{\n}
        <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->{\n}
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->{\n}
        <!--[if lt IE 9]>{\n}
          <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js</script>{\n}
          <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js</script>{\n}
        <![endif]-->{\n}
    </head>{\n}
    <body>{\n}
    <div class="bg-cover{\n}
        <!-- header-->{\n}
        <header>{\n}
            <div class="container{\n}
                <div class="row{\n}
                    <div class="col-md-3 col-xs-3 logo<a href="#<img src="img/logo.png" alt="" /></a>{\n}
                    <div class="col-md-2 col-xs-2 slagan text-centerПервичное жильё из первых рук{\n}
                    <div class="col-md-7 col-xs-7{\n}
                        <ul class="nav nav-pills pull-right{\n}
                            <li><a href="#class="glyphicon glyphicon-align-right" aria-hidden="true Сравнение</a></li>{\n}
                            <li><a href="#class="glyphicon glyphicon-heart" aria-hidden="true Избранное</a></li>{\n}
                            <li><a href="#class="glyphicon glyphicon-book" aria-hidden="true Просмотрено</a></li>{\n}
                            <li><a class="btn btn-warning" href="#Контакты</a></li>{\n}
                        </ul>{\n}
                    {\n}
                {\n}
                <div class="row promo-text{\n}
                    <div class="col-md-6 col-xs-6<h1>Более 300 объектов  недвижимости</h1>{\n}
                    <div class="col-md-6 col-xs-6 text-left</p>В нашем предложении более 300 строящихся и новых  домов в Санкт-Петербурге и Ленинградской области.</p> Мы знаем о новостройках все!{\n}
                {\n}
            {\n}
        </header>{\n}
        <!-- end header -->{\n}
        <!-- filter -->{\n}
        <section id="filter{\n}
            <div class="container{\n}
                <div class="tab-panel{\n}
                    <!-- nav tabs -->{\n}
                    <ul class="nav nav-tabs" role="tablist{\n}
                        <li role="presentation" class="active<a href="#home" aria-controls="home" role="tab" data-toggle="tabНовостройки</a></li>{\n}
                        <li role="presentation<a href="#profile" aria-controls="profile" role="tab" data-toggle="tabВторичное жилье</a></li>{\n}
                    </ul>{\n}
                    <!-- tab panes -->{\n}
                    <div class="tab-content{\n}
                         <div role="tabpanel" class="tab-pane active" id="home{\n}
                            <!-- form -->{\n}
                            <form action="" method="post{\n}
                                <div class="row{\n}
                                    <div class="form-group{\n}
                                        <div class="col-sm-3{\n}
                                            <label for="" class="control-labelНазвание, район, метро, id</label>{\n}
                                            <input type="text" name="" class="form-control" id="" placeholder="Балти" />{\n}
                                            class="glyphicon glyphicon-search pull-right" aria-hidden="true{\n}
                                        {\n}
                                        <div class="col-sm-2 cbox {\n}
                                            <label for="" class="control-labelКоличество комнат</label>{\n}
                                            <input type="checkbox" value=" C{\n}
                                            <input type="checkbox" value=" 2{\n}
                                            <input type="checkbox" value="" disabled> 3{\n}
                                            <input type="checkbox" value="" disabled> 4{\n}
                                        {\n}
                                        <div class="col-sm-2{\n}
                                            <label for="" class="control-labelСрок сдачи, от</label>{\n}
                                            <select class="form-control{\n}
                                                <option>IV квартал 2014</option>{\n}
                                            </select>{\n}
                                        {\n}
                                        <div class="col-sm-2{\n}
                                            <label for="" class="control-labelСрок сдачи, до</label>{\n}
                                            <select class="form-control{\n}
                                                <option>IV квартал 2015</option>{\n}
                                            </select>{\n}
                                        {\n}
                                        <div class="col-sm-3{\n}
                                            <label for="" class="control-labelСтоимость квартиры, т. р.</label>{\n}
                                            <div class="row{\n}
                                                <div class="col-sm-5<input type="text" name="" class="form-control" id="" placeholder="2 800" />{\n}
                                                <div class="col-sm-2 text-centerclass="entypo-minus{\n}
                                                <div class="col-sm-5<input type="text" name="" class="form-control" id="" placeholder="3 300" />{\n}
                                            {\n}
                                        {\n}
                                    {\n}
                                {\n}
                                class="label label-defaultКрасносельский район <b class="entypo-cancel{\n}
                                class="label label-defaultУлица Адмирала Трибуца <b class="entypo-cancel{\n}
                                class="label label-defaultУлица Пограничника Гарькавого <b class="entypo-cancel{\n}
                                <div class="clearfix{\n}
                                <div class="row line{\n}
                                    <div class="col-sm-3<input type="checkbox" value="" checked> Ипотека {\n}
                                    <div class="col-sm-3<input type="checkbox" value="" checked> Рассрочка {\n}
                                {\n}
                                <div class="row{\n}
                                    <div class="col-sm-3{\n}
                                        <div class="row{\n}
                                            <div class="col-sm-5<label for="" class="control-labelПерв. взнос</label><input type="text" name="" class="form-control" id="" placeholder="600 000" />{\n}
                                            <div class="col-sm-2 text-center ridили{\n}
                                            <div class="col-sm-5<label for="" class="control-labelВ мес. платеж</label><input type="text" name="" class="form-control" id="" placeholder="22 800" />{\n}
                                        {\n}
                                    {\n}
                                    <div class="col-sm-3{\n}
                                        <div class="row{\n}
                                            <div class="col-sm-5<label for="" class="control-labelПерв. взнос</label><input type="text" name="" class="form-control" id="" placeholder="" disabled/>{\n}
                                            <div class="col-sm-2 text-center ridили{\n}
                                            <div class="col-sm-5<label for="" class="control-labelВ мес. платеж</label><input type="text" name="" class="form-control" id="" placeholder="" disabled/>{\n}
                                        {\n}
                                    {\n}
                                    <div class="col-sm-2{\n}
                                        <label for="" class="control-labelМетраж, м2</label>{\n}
                                        <div class="row{\n}
                                            <div class="col-sm-5<input type="text" name="" class="form-control" id="" placeholder="30" />{\n}
                                            <div class="col-sm-2 text-center<b class="entypo-minus{\n}
                                            <div class="col-sm-5<input type="text" name="" class="form-control" id="" placeholder="40" />{\n}
                                        {\n}
                                    {\n}
                                    <div class="col-sm-2{\n}
                                        <div class="checkbox{\n}
                                            <input type="checkbox" value=" Субсидия {\n}
                                            <input type="checkbox" value="" checked> Отделка{\n}
                                        {\n}
                                    {\n}
                                    <div class="col-sm-2 text-right{\n}
                                        <button class="btn btn-primary btn-lgПодобрать</button>{\n}
                                    {\n}
                                {\n}
                                <div class="text-right top<a href="#Быстрый поиск</a>{\n}
                            </form>{\n}
                            <!-- end form -->{\n}
                         {\n}
                    {\n}
                {\n}
            {\n}
        </section>{\n}
        <!-- end filter -->{\n}
        <!-- promo -->{\n}
        <section id="promo{\n}
            <div class="container{\n}
                    {$content | noAutoescape}{\n}{\n}

                <div class="row{\n}
                    <div class="col-md-4 col-xs-4{\n}
                        <h3>Выбор ипотечной программы</h3>{\n}
                        <ul>{\n}
                            <li>Ипотечная ставка от 11,5%,</li>{\n}
                            <li>Более 50 ипотечных программ.</li>{\n}
                        </ul>{\n}
                    {\n}
                    <div class="col-md-4 col-xs-4{\n}
                        <h3>Подготовка документов за 30 минут</h3>{\n}
                        </p>Наш специалист соберет весь необходимый комплект доку-ментов в вашем присутствии или без вас.</p>{\n}
                    {\n}
                    <div class="col-md-4 col-xs-4{\n}
                        <h3>Одобрение в пяти банках за три дня</h3>{\n}
                        </p>Через три дня получайте одобрение на ипотечный кредит в пяти банках.</p>{\n}
                    {\n}
                {\n}
                <div class="text-center top<a href="#" class="btn btn-lg btn-dangerРассчитать ипотеку</a>{\n}
            {\n}
        </section>{\n}
        <!-- end -->{\n}
        <!-- service -->{\n}
        <section id="service{\n}
            <div class="container{\n}
                <h3 class="text-centerСлужба демонстрации квартир</h3>{\n}
                <div class="row{\n}
                    <div class="col-md-6 col-xs-6{\n}
                        <img src="img/pics1.jpg" alt="" width="280" />{\n}
                        <img src="img/pics2.jpg" alt="" width="280" />{\n}
                        <h4>Служба демонстрации квартир — class="text-primaryбыстро и удобно!</h4>{\n}
                        </p>Индивидуальный показ в удобное вам время от ближайшей станции метро на автомобиле сотрудника. За пару часов своими глазами вы увидите все интересные вам жилые комплексы.</p>{\n}
                    {\n}
                    <div class="col-md-6 col-xs-6{\n}
                        <div class="pull-left<img src="img/pics3.jpg" alt="" />{\n}
                        <div class="pull-left{\n}
                        <h4>Автобусный тур — class="text-primaryкаждые выходные!</h4>{\n}
                        <ul>{\n}
                            <li>Вы ознакомитесь с самым широким предложением по строящимся домам Санкт-Петербурга и Ленинградской области;</li>{\n}
                            <li>посетите несколько районов города за одну поездку, сравнить удобство местоположения и общее развитие территорий;</li>{\n}
                            <li>собственными глазами увидите степень готовности новостроек;</li>{\n}
                            <li>наглядно ознакомитесь с качеством строительства.</li>{\n}
                        </ul>{\n}
                        {\n}
                    {\n}
                {\n}
                <div class="text-center top<a href="#" class="btn btn-lg btn-defaultЗаписаться бесплатно</a>{\n}
            {\n}
        </section>{\n}
        <!-- end service -->{\n}
        <!-- sell -->{\n}
        <section id="sail{\n}
            <div class="container{\n}
                <h3 class="text-centerПродажа вашей квартиры</h3>{\n}
                <div class="row{\n}
                    <div class="col-md-6 col-xs-6{\n}
                        </p>Мечтаете о квартире в новом доме, но для реализации задуманного необходимо продать имеющееся жилье?</p>{\n}
                        </p>Не знаете с чего начать процесс продажи?</p>{\n}
                        </p>Пугают рутинные и длительные этапы по проведению сделки, подготовке и сбору документов?</p>{\n}
                    {\n}
                    <div class="col-md-6 col-xs-6{\n}
                        <h4>Мы поможем решить все эти вопросы максимально комфортно и <a href="#реализовать Вашу квартиру</a> по самым интересным тарифам Санкт-Петербурга</h4>{\n}
                    {\n}
                {\n}
                <div class="text-center top<a href="#" class="btn btn-lg btn-successПродать квартиру</a>{\n}
            {\n}
        </section>{\n}
        <!-- end sell -->{\n}
        <!-- violet block -->{\n}
        <section id="violet{\n}
            <div class="container{\n}
                <div class="text-center{\n}
                    <h4>Все наши услуги бесплатны</h4>{\n}
                    <a href="#" class="btn btn-lg btn-warningСвязаться с нашим специалистом</a>{\n}
                    </p>Бесплатные звонки по России</p>{\n}
                {\n}
            {\n}
        </section>{\n}
        <!-- end violet -->{\n}
        <!-- footer -->{\n}
        <footer>{\n}
            <div class="black bg-warning{\n}
                <div class="container{\n}
                    <div class="row{\n}
                        <div class="col-md-4 col-xs-4{\n}
                            </p>Следите за акциями, спецпредложениями и новостями новостроек в соцсетях:</p>{\n}
                        {\n}
                        <div class="col-md-4 col-xs-4{\n}
                            <ul class="nav nav-pills{\n}
                                <li><a class="brandico-facebook" title="" href="#</a></li>{\n}
                                <li><a class="brandico-twitter" title="" href="#</a></li>{\n}
                                <li><a class="brandico-vkontakte-rect" title="" href="#</a></li>{\n}
                            </ul>{\n}
                        {\n}
                    {\n}
                {\n}
            {\n}
            <div class="gray bg-danger{\n}
                <div class="container{\n}
                    <div class="row{\n}
                        <div class="col-md-2 col-xs-2{\n}
                            <h4>Новостройки</h4>{\n}
                            <ul class="nav nav-pills nav-stacked{\n}
                                <li><a href="#Объекты на карте</a></li>{\n}
                                <li><a href="#Подбор квартиры</a></li>{\n}
                                <li><a href="#Дома в центре</a></li>{\n}
                                <li><a href="#Дома на севере</a></li>{\n}
                                <li><a href="#Дома на юге</a></li>{\n}
                            </ul>{\n}
                        {\n}
                        <div class="col-md-2 col-xs-2{\n}
                            <h4>Популярные запросы</h4>{\n}
                            <ul class="nav nav-pills nav-stacked{\n}
                                <li><a href="#Квартиры в готовых домах</a></li>{\n}
                                <li><a href="#Квартиры в ипотеку</a></li>{\n}
                                <li><a href="#Квартиры с отделкой</a></li>{\n}
                                <li><a href="#Квартиры-студии</a></li>{\n}
                                <li><a href="#Однокомнатные квартиры</a></li>{\n}
                                <li><a href="#Двухкомнатные квартиры</a></li>{\n}
                                <li><a href="#Трехкомнатные квартиры</a></li>{\n}
                            </ul>{\n}
                        {\n}
                        <div class="col-md-2 col-xs-2{\n}
                            <h4>Наши подборки</h4>{\n}
                            <ul class="nav nav-pills nav-stacked{\n}
                                <li><a href="#Квартиры по доступной цене</a></li>{\n}
                                <li><a href="#Квартиры на выгодных условиях</a></li>{\n}
                                <li><a href="#Квартиры для комфортной жизни</a></li>{\n}
                                <li><a href="#Квартиры по уступке</a></li>{\n}
                                <li><a href="#Загородная недвижимость</a></li>{\n}
                            </ul>{\n}
                        {\n}
                        <div class="col-md-2 col-xs-2{\n}
                            <h4>Компания Тренд</h4>{\n}
                            <ul class="nav nav-pills nav-stacked{\n}
                                <li><a href="#О компании</a></li>{\n}
                                <li><a href="#10 выгодных причин</a></li>{\n}
                                <li><a href="#Награды и благодарности</a></li>{\n}
                                <li><a href="#Ипотечный центр</a></li>{\n}
                                <li><a href="#Новости</a></li>{\n}
                                <li><a href="#Карьера</a></li>{\n}
                                <li><a class="text-danger" href="#Пожаловаться</a></li>{\n}
                                <li><a class="text-danger" href="#Контакты</a></li>{\n}
                            </ul>{\n}
                        {\n}
                        <div class="col-md-4 col-xs-4{\n}
                            <h3>№ 2. Бесплатный ипотечный центр</h3>{\n}
                            <h3 class="text-primaryВсе 3 причины, почему с нами выгодно</h3>{\n}
                            <form class="form-inline" role="form{\n}
                                 <div class="form-group<input type="text" class="form-control" id="" placeholder="Ваш e-mail{\n}
                                 <button type="submit" class="btn btn-primaryclass="entypo-right-open-big</button>{\n}
                            </form>{\n}
                            <div class="help-block<small>Подпишитесь на старты продаж, новости проектов, акции и спецпредложения</small>{\n}
                        {\n}
                        {\n}
                    {\n}
                    <div class="clearfix{\n}
                    <div class="row{\n}
                        <div class="col-md-3 col-xs-3<div class="text-left copiryngСделано в <a href="# Deasign</a>{\n}
                        <div class="col-md-5 col-xs-5{\n}
                        <div class="col-md-4 col-xs-4 pull-left{\n}
                    {\n}
                {\n}
            {\n}
            {\n}
        </footer>{\n}
        <!-- end footer -->{\n}
        {\n}
        {\n}
        {\n}
        <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->{\n}
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js</script>{\n}
        <!-- Include all compiled plugins (below), or include individual files as needed -->{\n}
        <script src="js/bootstrap.min.js</script>{\n}
    </body>{\n}
    </html>{\n}
    {/template}
  #+END_SRC

* Interface

  Соберем веб-интерфейс:

  #+NAME: iface
  #+BEGIN_SRC lisp :tangle src/mod/trend/iface.lisp :noweb tangle :exports none :padline no :comments link
    ;;;; iface.lisp

    (in-package #:moto)

    ;; Страницы
    <<iface_contents>>
  #+END_SRC

** Тестовая страница шаблонов

   #+NAME: iface_contents
   #+BEGIN_SRC lisp :noweb tangle :exports none
     (in-package #:moto)

     (defparameter *trnd-pages*
       '((:title "Застройщики" :link "bldr")
         (:title "Жилые комплексы" :link "cmpx" )))

     ;; Меню модуля
     (restas:define-route test-page ("/trnd")
       (format nil "~{~A~}"
               (mapcar #'(lambda (x)
                           (format nil "<a href=\"/trnd/~A\">~A</a><br />"
                                   (getf x :link)
                                   (getf x :title)))
                       ,*trnd-pages*)))

   #+END_SRC

** Описание интерфейса поиска

   #+NAME: iface_contents
   #+BEGIN_SRC lisp :noweb tangle :exports none
     ;; (in-package #:moto)

     ;; ((количество-комнат
     ;;   (radiobtn Студия 1 2 3 4+))
     ;;  (стоимость)
     ;;  (жилой-комплекс)
     ;;  (срок-сдачи)
     ;;  (расположение)
     ;;  (застройщик)
     ;;  (отделка))
   #+END_SRC


   #+NAME: newbldfrm
   #+BEGIN_SRC closure-template-html :noweb tangle :exports none
     <div class="filterbox" id='filter'>
         <input type="hidden" name="bigfilterflag" id="bigfilterflag" value = "1
         <input type="hidden" name="orderflat" id="orderflat" value = "vaf.amountDisc
         <input type="hidden" name="ordercomplex" id="ordercomplex" value = "H.Id desc
         <div class="parametres_box
             <div class="box
                 <div class="titleКоличество комнат
                 <ul class="choose_list
                     <li class="study" >
                         <div id='rooms_bt_0' OnClick="RoomsCheck(0);Студия
                     </li>
                     <li>
                         <div id='rooms_bt_1' OnClick="RoomsCheck(1);1
                     </li>
                     <li>
                         <div id='rooms_bt_2' OnClick="RoomsCheck(2);2
                     </li>
                     <li>
                         <div id='rooms_bt_3' OnClick="RoomsCheck(3);3
                     </li>
                     <li>
                         <div id='rooms_bt_4' OnClick="RoomsCheck(4);4+
                     </li>
                 </ul>
                 <input type='hidden' id='rooms0' name='rooms0' value='-1'>
                 <input type='hidden' id='rooms1' name='rooms1' value='-1'>
                 <input type='hidden' id='rooms2' name='rooms2' value='-1'>
                 <input type='hidden' id='rooms3' name='rooms3' value='-1'>
                 <input type='hidden' id='rooms4' name='rooms4' value='-1'>

             <div class="box
                 <div class="titleСтоимость
                 <ul class="choose_list
                     <li class="w100<a href="javascript:CostCheck('all');" id='cost_all_flat' >Квартира</a></li>
                     <li class="w100<a href="javascript:CostCheck('meter');" id='cost_per_meter' >Квадратный метр</a></li>
                 </ul>
                 <input type='hidden' id='costval' name='costval' value='all'>

             <div class="box min
                 <div class="titleЖилой комплекс:
                 <asp:ListView ID="complexlist" runat="server"
                               DataKeyNames="id" EnableModelValidation="True
                     <ItemTemplate>
                         <option value="<%# Eval("id") %>" ><%# Eval("name") %></option>
                     </ItemTemplate>
                     <LayoutTemplate>
                         <select name="complexlist" class="selectbox<option value="0Не важно</option><asp:PlaceHolder runat="server" ID="itemPlaceholder</asp:PlaceHolder></select>
                     </LayoutTemplate>
                 </asp:ListView>

             <%--<div class="box min
                      <div class="title
                          <a href="javascript: visib('ComplexModal_v2'); BodyScrol(0); GetGroupAllVal('filter', '/ajaxdata/get_complex_list.php', 'ComplexModal_v2_content', '', 0);Жилой комплекс</a>


                          <input type="text" name="complexlisttext" id="complexlisttext" class="filter_input" OnKeyUp="KeyUpKomplex();"  autocomplete="off"/>
                          class="i_bem" id="complex_i_bem" style="display:none;

                      <input type='hidden' id='complexlist' name='complexlist' value=''>
             --%>
             <div class="box last
                 <div class="titleСрок сдачи до:
                 <asp:ListView ID="dateendselect" runat="server"
                               DataKeyNames="yearEnd" EnableModelValidation="True
                     <ItemTemplate>
                         <option value="<%# Eval("yearEnd") %>" ><%# Eval("yearEnd") %></option>
                     </ItemTemplate>
                     <LayoutTemplate>
                         <select name="dateendselect" class="selectbox<option value="0Не важно</option><asp:PlaceHolder runat="server" ID="itemPlaceholder</asp:PlaceHolder></select>
                     </LayoutTemplate>
                 </asp:ListView>

             <div class="clear
             <div class="box
                 <div class="titleРасположение
                 <ul class="choose_list
                     <li class="study<a href="javascript: visib('RaionModal_v2'); BodyScrol(0); GetGroupAllVal('filter', '/ajaxdata/get_raion_list.php', 'RaionModal_v2_content', '', 0);Район</a></li>
                     <li class="metro<a href="javascript: visib('MetroModal_v2'); BodyScrol(0); GetGroupAllVal('filter', '/ajaxdata/get_metro_list.php', 'MetroModal_v2_content', '', 0);Метро</a></li>
                     <input type='hidden' id='raionlist' name='raionlist' value=''>
                     <input type='hidden' id='metrolist' name='metrolist' value=''>
                     </ul>

                     <div class="box
                         <div class="title w100От:
                         <div class="title w100До:
                         <input type="text" name="costmin" class="filter_input w100" placeholder="Минимально"  id='costmin' OnKeyUp="OktetAdd(document.getElementById('costmin').value, 'costmin');" />
                         <input type="text" name="costmax" class="filter_input w100" placeholder="Максимально" id='costmax' OnKeyUp="OktetAdd(document.getElementById('costmax').value, 'costmax');" />

                     <div class="box min
                         <div class="titleЗастройщик:
                         <asp:ListView ID="devlisttext" runat="server"
                                       DataKeyNames="id" EnableModelValidation="True
                             <ItemTemplate>
                                 <option value="<%# Eval("id") %>" ><%# Eval("name") %></option>
                             </ItemTemplate>
                             <LayoutTemplate>
                                 <select name="devlisttext" class="selectbox<option value="0Не важно</option><asp:PlaceHolder runat="server" ID="itemPlaceholder</asp:PlaceHolder></select>
                             </LayoutTemplate>
                         </asp:ListView>
                     <!--
                               <div class="box min
                                   <div class="title
                                       <a href="javascript:visib('DeveloperModal_v2'); BodyScrol(0); GetGroupAllVal('filter', '/ajaxdata/get_developer_list.php', 'DeveloperModal_v2_content', '', 0);Застройщик</a>


                                       <input type="text" name="devlisttext" id="devlisttext" class="filter_input" OnKeyUp="KeyUpDev();"  autocomplete="off"/>
                                       class="dev_i_bem" id="dev_i_bem" style="display:none;

                                   <input type='hidden' id='developerlist' name='developerlist' value=''>
                               -->
                     <div class="box last
                         <div class="titleОтделка:
                         <asp:ListView ID="decorationsel" runat="server"
                                       DataKeyNames="id" EnableModelValidation="True
                             <ItemTemplate>
                                 <option value="<%# Eval("id") %>" ><%# Eval("name") %></option>
                             </ItemTemplate>
                             <LayoutTemplate>
                                 <select name="decorationsel" class="selectbox<option value="0Не важно</option><asp:PlaceHolder runat="server" ID="itemPlaceholder</asp:PlaceHolder></select>
                             </LayoutTemplate>
                         </asp:ListView>

                     <a href="javascript:visib('advancedfind'); KostilAdvPar();" class="show_param" id='advancedfind_href'>расширенный поиск <img src="/css/images/down.png</a>

                     <div class="middle" id='advancedfind'>
                         <input type='hidden' id='advanviz' name='advanviz' value='0'>
                         <div class="box w150
                             <div class="title margПлощадь общая (М&sup2;)
                             <label>От:</label><input type="text" name="sallmin" class="filter_input" id='sallmin' />
                             <label>До:</label><input type="text" name="sallmax" class="filter_input" id='sallmax' />

                         <div class="box w150
                             <div class="title margПлощадь кухни (М&sup2;)
                             <label>От:</label><input type="text" name="skitchenmin" class="filter_input" id='skitchenmin' />
                             <label>До:</label><input type="text" name="skitchenmax" class="filter_input" id='skitchenmax' />

                         <div class="box w150
                             <div class="title margЭтаж
                             <label>От:</label><input type="text" name="floormin" class="filter_input" id='floormin' />
                             <label>До:</label><input type="text" name="floormax" class="filter_input" id='floormax' />

                         <div class="box min130
                             <div class="titleТип дома
                             <asp:ListView ID="housetype" runat="server"
                                           DataKeyNames="id" EnableModelValidation="True
                                 <ItemTemplate>
                                     <option value="<%# Eval("id") %>" ><%# Eval("name") %></option>
                                 </ItemTemplate>
                                 <LayoutTemplate>
                                     <select name="decorationsel" class="selectbox<option value="allНе важно</option><asp:PlaceHolder runat="server" ID="itemPlaceholder</asp:PlaceHolder></select>
                                 </LayoutTemplate>
                             </asp:ListView>

                         <div class="box last min
                             <div class="titleПоиск по ID
                             <input type="text" class="filter_input" placeholder="Укажите ID объекта" name="findid" id='findid' />


                     <div class="resultsbox"  id='tags' >
                         <div id='raiontags' style='padding-left:10px;'name='raiontags'>
                         <div id='metrotags' style='padding-left:10px;'name='metrotags'>
                         <div id='complextags' style='padding-left:10px;'name='complextags'>
                         <div id='developertags' style='padding-left:10px;'name='developertags'>
                         <input type='hidden' id='pagenumber' name='pagenumber' value=1><input type='hidden' id='special' name='special' value=0>

                     <div class="resultsbox
                         <div class="inline
                             <div class="filter_button_wrap
                                 <asp:Button PostBackUrl="/NewBuildingSearchResults.aspx" type="submit" Text="Найти" CssClass="filter_button" runat="server" />

                             <div class="res" id='spanallfind'>



  #+END_SRC

** Страничка загрузки данных

   #+NAME: iface_contents
   #+BEGIN_SRC lisp :noweb tangle :exports none
     ;; (in-package #:moto)

     ;; ;; Страница загрузки данных
     ;; (restas:define-route load-data-page ("/load")
     ;;   (with-wrapper
     ;;     (concatenate
     ;;      'string
     ;;      "<h1>Загрузка данных из файлов</h1>"
     ;;      (if (null *current-user*)
     ;;          "Error: Незалогиненные пользователи не имеют права загружать данные"
     ;;          (frm (tbl
     ;;                (list
     ;;                 (row "" (let ((cmpx-s))
     ;;                           (loop-dir cmpx ()
     ;;                                (push cmpx cmpx-s))
     ;;                           (format nil "~{~A<br/>~}<br />" cmpx-s)))
     ;;                 (row "" (hid "load"))
     ;;                 (row "" (submit "Загрузить")))))))))

     ;; ;; Контроллер страницы регистрации
     ;; (restas:define-route load-ctrl ("/load" :method :post)
     ;;   (with-wrapper
     ;;     (let* ((p (alist-to-plist (hunchentoot:post-parameters*))))
     ;;       (if (equal (getf p :load) "")
     ;;           (load-data)
     ;;           "err"))))
   #+END_SRC

** Список ЖК

 #+NAME: iface_contents
 #+BEGIN_SRC lisp :noweb tangle :exports none

   ;; (in-package #:moto)

   ;; (define-page all-cmpx-s "/cmpxs"
   ;;   (concatenate 'string "<h1>" "Жилые комплексы" "</h1>" ""
   ;;                "<br /><br />"
   ;;                (tbl
   ;;                 (with-collection (cmpx (funcall #'all-cmpx))
   ;;                   (tr
   ;;                    (td
   ;;                     (format nil "<a href=\"/~a/~a\~a</a>" "cmpx"
   ;;                     (id cmpx) (id cmpx)))
   ;;                    (td (name cmpx))
   ;;                    (td (addr cmpx))
   ;;                    (td (aif (district-id cmpx)
   ;;                             (name (get-district it))))
   ;;                    (td (aif (metro-id cmpx)
   ;;                             (name (get-metro it))))
   ;;                    (td (frm %del%))))
   ;;                 :border 1))
   ;;   (:del (act-btn "DEL" (id cmpx) "Удалить")
   ;;         (progn (del-cmpx (getf p :data)))))
 #+END_SRC

** Страница ЖК

   На самом деле это не карточка Жилищного Комплекса, а скорее карточка одной из его очередей,
   т.к. большинство параметров различаются между очередями. С другой стороны все очереди одного
   комплекса между собой связаны, так что нужна какая-то обьединяющая сущность.

   [[file:pics/Trend_complex20.png][Дизайн-макет: Карточка ЖК]]

   Если пользователь попал на эту страницу НЕ через поиск - ему надо
   показать кнопку "К поиску (378)", которая содержит кол-во
   вариантов при самых широких параметров поиска.

   Есть пользователь попал на эту страницу из выборки - эта кнопка
   должна вести на его выборку и содержать кол-во вариантов его
   выборки.

   Тут может быть мемоизация и предвычисления, которые мы на первом
   этапе можем не делать.

   Если пользователь зашел на этот обьект - этот объект нужно
   добавить в его "просмотренные".

   Отсюда пользователь может перейти к сценарию "сравнение",
   "добавить в избранное", "распечатать объект".

   Когда все квартиры в очереди закончились необходимо не удалять
   очередь с сайта, а убирать их в архив, чтобы она не показывалась в
   поиске, но были доступна администратору.

   Видим:
   - Название ЖК
   - Метро
   - Расстояние до метро
   - Район
   - Улица (или пересчение улиц)

   - Картинки (неограниченно, можно листать)
   - Минимальные цены в этом ЖК в формате "тип квартиры - цена -
     метры". При выборе этой ссылки мы сдвигаемся по странице до
     раздела "планировки и цены" где разворачивается аккордеон с
     выбранным им вариантом".
   - Возможность выбора очереди (с инфой о сроке сдачи)
     Когда пользователь выбирает другую очередь - он переходит на
     другую карточку (здесь очевидно нужна таблица связи)
   - Возможность выбора корпуса
     От корпуса зависят цены, карта корпусов, цены в разделе
     "планировки и цены", "преимущества"
   - Кнопка "все корпуса и цены", открывает pop-up "Очереди и корпуса"
   - Преимущества
   - Карта расположения корпусов комплекса
   - Карта объекта с ценой
   - Раздел планировки и цены
     - Форма поиска по квартирам (внутри квартир этой карточки)
       - Сортировка по цене (убыванию и возрастанию)
       - Выбор корпуса
       - Выбор кол-ва комнат
       - Стоимость квартиры (от .. до .. тыс.руб)
       - Первоначальный взнос, от ... до ...
       - Метраж
       - Кнопка поиска
     - Выдача, в аккордеоне, сгруппированные по кол-ву комнат, колонки
       - Номер корпуса
       - Кол-во комнат
       - Общая площадь
       - Жилая площадь
       - Площадь кухни
       - Балкон/лоджия
       - Санузел
       - Отделка
       - Первый взнос от ..
       - Цена с доп. скидками
       - Инвест. привлекательность
       - Добавить в сравнение?
       - Избранное?
       - Подробнее
       При клике на ячейку в таблице или на кнопку "подробнее" мы
       попадаем в карточку квартиры.
   - Картинки (еще раз)
   - Описание
   - Паспорт обьекта
     - Список параметров-значений, и параметры и значения могут добавлять контент-менеджеры.
   - Ход строительства диаграмма месяцев по годам, к каждому месяцу
     несколько фотографий
   - Кнопка "записаться на тур бесплатно"
   - Похожие предложения
     Как выбирать и группировать - непонятно.
     Нужно сделать алгоритм и вручную.
   - Регламент (условия продажи: 100% оплата, рассрочка, ипотека). В дизайне его нет. Надо ли его
     показывать клиентам.
   - Дата обновления. Показывать ли это клиентам?


 #+NAME: iface_contents
 #+BEGIN_SRC lisp :noweb tangle :exports none

   ;; (in-package #:moto)

   ;; (define-page cmpx "/cmpx/:cmpx-id"
   ;;   (let* ((i (parse-integer cmpx-id))
   ;;          (cmpx (get-cmpx i)))
   ;;     (if (null cmpx)
   ;;         "Нет такого жилого комплекса"
   ;;         (format nil "~{~A~}"
   ;;                 (list
   ;;                  (format nil "<h1>Страница жилого комплекса ~A</h1>" (id cmpx))
   ;;                  (format nil "<h2>Данные комплекса ~A</h2>" (name cmpx))
   ;;                  (tbl
   ;;                   (with-element (cmpx cmpx)
   ;;                     (row "Название" (name cmpx))
   ;;                     (row "Адрес" (addr cmpx))
   ;;                     (row "Район" (aif (district-id cmpx)
   ;;                                       (name (get-district it))))
   ;;                     (row "Метро" (aif (metro-id cmpx)
   ;;                                       (name (get-metro it)))))
   ;;                   :border 1)
   ;;                  (format nil "<h2>Очереди комплекса ~A</h2>~%~A"
   ;;                          (name cmpx)
   ;;                          (tbl
   ;;                           (with-collection (i (find-plex :cmpx-id i))
   ;;                             (tr
   ;;                              (td
   ;;                               (format nil "<a href=\"/~a/~a\~a</a>" "plex"
   ;;                                       (id i) (id i)))
   ;;                              (td (name i)) (td (frm %del%))))
   ;;                           :border 1))))))
   ;;   (:del (act-btn "DEL" (id i) "Удалить")
   ;;         (progn (del-plex (getf p :data)))))
 #+END_SRC

** Страница очереди ЖК

 #+NAME: iface_contents
 #+BEGIN_SRC lisp :noweb tangle :exports none

   ;; (in-package #:moto)

   ;; (define-page plex "/plex/:plex-id"
   ;;   (let* ((i (parse-integer plex-id))
   ;;          (plex (get-plex i)))
   ;;     (if (null plex)
   ;;         "Нет такой очереди у этого жилого комплекса"
   ;;         (format nil "~{~A~}"
   ;;                 (list
   ;;                  (format nil "<h1>Страница очереди жилого комплекса</h1>")
   ;;                  (format nil "<h2>Данные очереди комплекса</h2>")
   ;;                  (tbl
   ;;                   (with-element (plex plex)
   ;;                     (row "Название" (name plex))
   ;;                     (row "Срок сдачи" (name (get-deadline (deadline-id plex))))
   ;;                     (row "Субсидия" (subsidy plex))
   ;;                     (row "Отделка" (finishing plex))
   ;;                     (row "Ипотека" (ipoteka plex))
   ;;                     (row "Рассрочка" (installment plex))
   ;;                     (row "Расстояние до метро" (distance plex)))
   ;;                   :border 1)
   ;;                   (format nil "<h2>Корпуса очереди жилого комплекса</h2>~%~A"
   ;;                          (tbl
   ;;                           (with-collection (i (find-crps :plex-id i))
   ;;                             (tr
   ;;                              (td
   ;;                               (format nil "<a href=\"/~a/~a\~a</a>" "crps"
   ;;                                       (id i) (id i)))
   ;;                              (td (name i)) (td (frm %del%))))
   ;;                           :border 1))))))
   ;;   (:del (act-btn "del" (id i) "Удалить")
   ;;         (progn (del-plex (getf p :data)))))
 #+END_SRC

** Страница корпуса очереди ЖК

 #+NAME: iface_contents
 #+BEGIN_SRC lisp :noweb tangle :exports none

   ;; (in-package #:moto)

   ;; (define-page crps "/crps/:crps-id"
   ;;   (let* ((i (parse-integer crps-id))
   ;;          (crps (get-crps i)))
   ;;     (if (null crps)
   ;;         "Нет такой очереди у этого жилого комплекса"
   ;;         (format nil "~{~A~}"
   ;;                 (list
   ;;                  (format nil "<h1>Страница корпуса очереди жилого комплекса</h1>")
   ;;                  (format nil "<h2>Данные очереди комплекса</h2>")
   ;;                  (tbl
   ;;                   (with-element (crps crps)
   ;;                     (row "Название" (name crps)))
   ;;                   :border 1)
   ;;                   (format nil "<h2>Планировки корпуса очереди жилого комплекса</h2>~%~A"
   ;;                          (tbl
   ;;                           (with-collection (i (find-flat :crps-id i))
   ;;                             (tr
   ;;                              (td
   ;;                               (format nil "<a href=\"/~a/~a\~a</a>" "flat"
   ;;                                       (id i) (id i)))
   ;;                              (td (format nil "~A к.кв." (rooms i)))
   ;;                              (td (format nil "~:d руб." (price i)))
   ;;                              (td (frm %del%))))
   ;;                           :border 1))))))
   ;;   (:del (act-btn "DEL" (id i) "Удалить")
   ;;         (progn (del-flat (getf p :data)))))
 #+END_SRC

** Страничка планировки

   [[file:pics/Trend_apartment02.png][Дизайн-макет: Карточка квартиры]]

   [[file:pics/Trend_apartment_print.png][Дизайн-макет: Карточка квартиры - версия для печати]]

   Есть вариант открывать карточку квартиры в pop-up окне. Но на каждую квартиру должна быть
   прямая ссылка - очевидно надо менять адресную строку. Также должна быть версия для печати,
   чтобы распечатать интересующий вариант.

   Менеджер по продаже должен иметь возможность на странице квартиры накидать скидок (иногородний
   покупатель, итп), влиящих на цену квартиры. Это очень важное бизнес-требование.

   Видим:
   - Пдф
   - Печать
   - Почта
   - Соцсети (шаринг)
   - Тип квартиры (студия, 1комнатная)
   - id
   - Цена при 100% оплате
   - Кнопка "подробности у менедждера" - ссылка на контакты

   Справа карточка комплекса идентичная поисковой выдачи - она оттуда
   и берется.

   - Планировка квартиры - рисунок
   - План этажа
   - Карта на который мы отмечаем где в корпусе расположена
     квартира - чтобы сориентироваться по виду.
   - Карта с минимальной ценой

   - Характеристики квартиры
     - Кол-во комнат
     - жилая площадь
     - общая площадь
     - Пллощадь кухни
     - Санузел
     - Отделка
     - Балкон
     Нужно иметь возможность добавлять сюда параметры

   - Сравнение
   - Избранное

   - Четыре ключевых преимущетва из ЖК

   - калькулятор ипотеки и рассрочки - отдельный кейс

   - Возможность баннеров (автобусные туры)

   - Инфо о жилом комплексе (потому что попадает в распечатку)

   - Сссылка "подробно о комплексе" - к ЖК

   - Квартиры в этом комплексе - ведут в карточку комплекса с
     открытыми двухкомнатными квартирами.

   - Сообщить об ошибке.

   - Когда было последнее обновление информации о квартире. Обновлено и дату. Чтобы менеджер
     видел актуальность. Показывать ли клиентам?

   Соберем шаблоны страницы планировки

   #+NAME: trendtpl_contents
   #+BEGIN_SRC closure-template-html :noweb tangle :exports none
     {template flatpage}
         <<flatpage_tpl_contents>>
     {/template}
   #+END_SRC

  Соберем определения страниц

 #+NAME: iface_contents
 #+BEGIN_SRC lisp :noweb tangle :exports none

   ;; (in-package #:moto)

   ;; (define-page flat "/flat/:flat-id"
   ;;   (let* ((i (parse-integer flat-id))
   ;;          (flat (get-flat i)))
   ;;     (if (null flat)
   ;;         "Нет такой квартиры"
   ;;         (format nil "~{~A~}"
   ;;                 (list
   ;;                  (format nil "<h1>Страница квартиры</h1>")
   ;;                  (format nil "<h2>Данные квартиры</h2>")
   ;;                  (tbl
   ;;                   (with-element (flat flat)
   ;;                     (row "Кол-во комнат" (rooms flat))
   ;;                     (row "Общая площадь" (area-living flat))
   ;;                     (row "Площадь кухни" (area-kitchen flat))
   ;;                     (row "цена" (format nil "~:d"(price flat)))
   ;;                     (row "балкон/лоджия" (balcon flat))
   ;;                     (row "Санузел" (sanuzel flat))
   ;;                     (row "" (frm %buy%))
   ;;                     )
   ;;                   :border 1)))))
   ;;   (:buy (act-btn "BUY" "BUY" "Купить")
   ;;         (progn 1)))
 #+END_SRC

*** TODO Pop-up
    Есть вариант открывать карточку квартиры в pop-up окне. Но на каждую квартиру должна
    быть прямая ссылка - очевидно надо менять адресную строку.

*** TODO Версия для печати
    Также должна быть версия для печати, чтобы распечатать интересующий вариант.

*** TODO Менеджер хочет накидать скидок
    Менеджер по продаже должен иметь возможность на странице квартиры накидать скидок (иногородний
    покупатель, итп), влиящих на цену квартиры. Это очень важное бизнес-требование.
*** TODO Pdf-версия
*** TODO Отправить на почту
*** TODO Рассказать в социальных сетях
*** Тип квартиры

    #+NAME: flatpage_tpl_contents
    #+BEGIN_SRC closure-template-html :noweb tangle :exports none
      {$rooms | noAutoescape}
      <br />
    #+END_SRC

    Тип квартиры показывается исходя из кол-ва комнат:

    #+NAME: flatpage_contents
    #+BEGIN_SRC lisp :noweb tangle :exports none
      :rooms (let ((r (rooms flat)))
               (cond ((equal 0 r) "Квартира-студия")
                     ((equal 1 r) "1-комнатная квартира")
                     ((equal 2 r) "2-комнатная квартира")
                     ((equal 3 r) "3-комнатная квартира")
                     ((equal 4 r) "4-комнатная квартира")
                     (t (err "unknown rooms value"))))
    #+END_SRC

*** Идентификатор квартиры

    #+NAME: flatpage_tpl_contents
    #+BEGIN_SRC closure-template-html :noweb tangle :exports none
      id: {$id | noAutoescape}
      <br />
    #+END_SRC

    Идентификатор квартиры показывается для быстрого доступа

    #+NAME: flatpage_contents
    #+BEGIN_SRC lisp :noweb tangle :exports none
      :id (id flat)
    #+END_SRC

*** Цена при 100% оплате

    #+NAME: flatpage_tpl_contents
    #+BEGIN_SRC closure-template-html :noweb tangle :exports none
      Цена квартиры при 100% оплате: {$price | noAutoescape}
      <br />
    #+END_SRC

    #+NAME: flatpage_contents
    #+BEGIN_SRC lisp :noweb tangle :exports none
      :price (price flat)
    #+END_SRC

*** Кнопка "подробности у менеджера"

    ссылка на контакты

    #+NAME: flatpage_tpl_contents
    #+BEGIN_SRC closure-template-html
      <a href="/contactsПодробности у менеджера</a>
      <br />
    #+END_SRC

*** TODO Карточка комплекса

    Справа карточка комплекса идентичная поисковой выдачи - она оттуда
    и берется.

    - Планировка квартиры - рисунок
    - План этажа
    - Карта на который мы отмечаем где в корпусе расположена
      квартира - чтобы сориентироваться по виду.
    - Карта с минимальной ценой

*** TODO Характеристики квартиры

    Нужно иметь возможность добавлять сюда параметры, но в первом прототипе мы это пока не
    делаем

    #+NAME: flatpage_tpl_contents
    #+BEGIN_SRC closure-template-html :noweb tangle :exports none
      <br />
      <div style="border: 1px solid blue;
          Кол_во комнат: {$rooms | noAutoescape}
          <br />
          Жилая площадь: {$area_living | noAutoescape}
          <br />
          Общая площадь: {$area_sum | noAutoescape}
          <br />
          Пллощадь кухни: {$area_kitchen | noAutoescape}
          <br />
          Санузел: {$sanuzel | noAutoescape}
          <br />
          Отделка: {$finishing | noAutoescape}
          <br />
          Балкон: {$balcon | noAutoescape}
          <br />

      <br />
    #+END_SRC

    #+NAME: flatpage_contents
    #+BEGIN_SRC lisp :noweb tangle :exports none
      :rooms (rooms flat)
      :area_living (area-living flat)
      :area_sum (area-sum flat)
      :area_kitchen (area-kitchen flat)
      :sanuzel (sanuzel flat)
      :finishing (finishing flat)
      :balcon (balcon flat)
    #+END_SRC

*** TODO Добавить в сравнение
*** TODO Добавить в избранное
*** TODO Четыре ключевых преимущетва из ЖК
*** TODO калькулятор ипотеки и рассрочки - отдельный кейс
*** TODO Возможность баннеров (автобусные туры)
*** TODO Инфо о жилом комплексе (потому что попадает в распечатку)
*** TODO Сссылка "подробно о комплексе" - к ЖК
*** TODO Квартиры в этом комплексе - ведут в карточку комплекса с открытыми двухкомнатными квартирами.
*** TODO Сообщить об ошибке.
*** TODO Когда было последнее обновление информации о квартире.

    Обновлено и дату. Чтобы менеджер видел актуальность. Показывать ли клиентам?

** START Поиск квартиры в новостройке

   Клиент может искать квартиру используя =простой поиск= или =расширенный поиск=. В сложном
   поиске больше параметров. В обоих случаях он получает одну и ту же выдачу, которая может быть
   представлена в двух разных форматах: =поисковая выдача с картой= или =поисковая выдача
   таблицей=.

   Экcпертов также часто интересует id квартиры - при вводе в строку поиска числового значения,
   находится должен искомый объект.

*** START Простой поиск

    [[file:pics/Trend_mainpage.png][Дизайн-макет: Простой поиск на главной странице]]

    При поиске клиенту интересны следующие параметры:
    - Район
    - Метро
    - Название жилищного комплекса
    - Количество комнат
    - Срок сдачи (не позднее)
    - Стоимость квартиры

    Требуется выводить подсказки в поисковой строке
    [[file:pics/Trend_mainpage07.png][Пример подсказок в дизайн-макете]]

    Пользователь, выполнивший простой поиск попадает в выдачу.

    #+NAME: iface_contents
    #+BEGIN_SRC lisp :noweb tangle :exports none

      ;; (in-package #:moto)

      ;; (define-page findpage "/find"
      ;;   (format nil "~{~A~}"
      ;;           (list
      ;;            (format nil "<h1>Страница поиска</h1>")
      ;;            (format nil "<h2>Простой поиск</h2>")
      ;;            (frm
      ;;             (tbl
      ;;              (list
      ;;               (row "Район"
      ;;                 (select ("district")
      ;;                   (list* (list "Не важен" "0")
      ;;                          (with-collection (i (all-district))
      ;;                            (list (name i)
      ;;                                  (id i))))))
      ;;               (row "Метро"
      ;;                 (select ("metro")
      ;;                   (list* (list "Любое" "0")
      ;;                          (with-collection (i (all-metro))
      ;;                            (list (name i)
      ;;                                  (id i))))))
      ;;               (row "Название ЖК"
      ;;                 (select ("cmpx")
      ;;                   (list* (list "Любой ЖК" "0")
      ;;                          (with-collection (i (all-cmpx))
      ;;                            (list (name i)
      ;;                                  (id i))))))
      ;;               (row "Кол-во комнат"
      ;;                 (tbl
      ;;                  (list
      ;;                   (row "" "Выберите не менее одного варианта")
      ;;                   (row (input "checkbox" :name "studio" :value t) "Студия")
      ;;                   (row (input "checkbox" :name "one" :value t) "Однокомнатная")
      ;;                   (row (input "checkbox" :name "two" :value t) "Двухкомнатная")
      ;;                   (row (input "checkbox" :name "three" :value t) "Трехкомнатная"))))
      ;;               (row "Срок сдачи (не позднее)"
      ;;                 (select ("deadline")
      ;;                   (list* (list "Не важен" "0")
      ;;                          (with-collection (i (all-deadline))
      ;;                            (list (name i)
      ;;                                  (id i))))))
      ;;               (row "Стоимость квартиры"
      ;;                 (tbl
      ;;                  (list
      ;;                   (row "" "Обязательные поля")
      ;;                   (row "от" (fld "price-from"))
      ;;                   (row "до" (fld "price-to")))))
      ;;               (row "" %find%))
      ;;              :border 1)
      ;;             :action "/results")))
      ;;   (:find (act-btn "FIND" "FIND" "Искать")
      ;;          "Err: redirect to /results!"))
   #+END_SRC

*** Расширенный поиск

    [[file:pics/Trend_mainpage_search.png][Дизайн-макет: Расширенный поиск на главной странице]]

    Все тоже самое что и в =простом поиске=, но:

    - Вместо "Срока сдачи" можно задать интервал (от ... до ...) тоже списком выбора
    - Добавляется блок "ипотека", в котором есть "первоначальный взнос" и "ежемесячный
      платеж". Клиент должен ввести число либо в одно поле либо в другое.
    - Рассрочка - либо "первоначальный взнос" либо "ежемесячный платеж". Если клиент готов
      рассматривать или ипотеку или рассрочку - то в выдаче мы выдаем и те и другие варианты
    - Метраж (от ... до ...)
    - Субсидия (галочка) - квартиру можно приобрести с помощью жилищного сертификата, который
      покрывает часть стоимости квартиры. Это можно объяснять всплывающей подсказкой
    - Отделка (галочка) - если клиент ставит галочку, то мы выдаем только те квартиры в которых
      есть обои, раковины и можно сразу жить.
    - Инвестиционная привлекательность удорожание в процентах или предоставить форму с двумя полями:
      - Сумма которую хочет инвестировать клиент
      - Срок на который хочет инвестировать клиент (поквартально)



    Также нужен поиск по расстоянию до метро, но мы будем стараться чтобы этот параметр был
    доступен только для менеджера компании

*** Поисковая выдача с картой

    [[file:pics/Trend_search12_map.png][Дизайн-макет: Поисковая выдача с картой]]

    Выдача отдается в две колонки - слева список, включающий:
    - Фото комплекса
    - Название
    - Район
    - Метро
    - Расстояние до метро
    - Срок сдачи
    - Тип отделки
    - Ипотека (если есть)
    - Рассрочка (если есть)
    - Цена квартир которых он искал (от...). Если он в поиске выбрал и
      однушку и двушку и трешку показывается самое дешевое с метражом
    - Цена всех вариантов (однушку и двушку и трешку), по клику на
      плюсике (с метражом)
    - В избранное
    - В сравнение

    В правой колонке выводятся маркеры на карте, содержащие цену и синхронизированные со списком
    выдачи (рамки при наведении итп)

    При этом при скроллировании карта остается на месте, а выдача прокручивается.

    Сортировать можно:
    - по цене туда и обратно
    - по сроку сдачи
    - по району
    - по станции метро
    - возможно, по расстоянию до метро

    Надо указывать число найденных комплексов.

    Возможность переключения между выдачей на карте и выдачей списком

    Нажимая на элемент выдачи он попадает в карточку ЖК

    После выдачи идет блок похожих предложений, но возможно откажемся от этого блока здесь.

*** START Поисковая выдача таблицей

    [[file:pics/Trend_search11_list.png][Дизайн-макет: Поисковая выдача таблицей]]

    Выдается таблица с колонками:
    - Район
    - Название ЖК
    - Станция метро
    - До метро
    - Срок сдачи
    - Отделка
    - Ипотека/Рассрочка
    - Кол-во комнат
    - Общая площадь
    - Цена с доп. скидками
    - Цена всех вариантов (однушку и двушку и трешку), по клику на
      плюсике (с метражом)
    - В избранное
    - В сравнение

    Сортировать необходимо по столбцам.

    Нажимая на элемент выдачи он попадает в карточку ЖК

    После выдачи идет блок похожих предложений, но возможно откажемся от этого блока здесь.

    #+NAME: iface_contents
    #+BEGIN_SRC lisp :noweb tangle :exports none
      ;; (in-package #:moto)

      ;; (defmacro find-query (price-from price-to &optional &key district metro deadline cmpx studio one two three)
      ;;   `(with-connection *db-spec*
      ;;      (query
      ;;       (:limit
      ;;        (:select (:as 'district.name 'district)  (:as 'cmpx.name 'cmpx)
      ;;                 (:as 'metro.name    'metro)     'distance
      ;;                 (:as 'deadline.name 'deadline)  'finishing
      ;;                 'ipoteka  'installment  'rooms  'area-sum  'price
      ;;                 :from 'flat
      ;;                 :inner-join 'crps :on (:= 'flat.crps_id 'crps.id)
      ;;                 :inner-join 'plex :on (:= 'crps.plex_id 'plex.id)
      ;;                 :inner-join 'cmpx :on (:= 'plex.cmpx_id 'cmpx.id)
      ;;                 :inner-join 'district :on (:= 'cmpx.district_id 'district.id)
      ;;                 :inner-join 'metro :on (:= 'cmpx.metro_id 'metro.id)
      ;;                 :inner-join 'deadline :on (:= 'plex.deadline_id 'deadline.id)
      ;;                 :where (:and ,(remove-if #'null
      ;;                                          `(:or ,(when studio `(:= 'rooms 0))
      ;;                                                ,(when one    `(:= 'rooms 1))
      ;;                                                ,(when two    `(:= 'rooms 2))
      ;;                                                ,(when three  `(:= 'rooms 3))))
      ;;                              (:and (:> 'price ,price-from)
      ;;                                    (:< 'price ,price-to))
      ;;                              ,(if district
      ;;                                   `(:= 'district_id ,district)
      ;;                                   t)
      ;;                              ,(if metro
      ;;                                   `(:= 'metro_id ,metro)
      ;;                                   t)
      ;;                              ,(if deadline
      ;;                                   `(:<= 'deadline_id ,deadline)
      ;;                                   t)
      ;;                              ,(if cmpx
      ;;                                   `(:= 'cmpx_id ,cmpx)
      ;;                                   t)))
      ;;        2000))))

      ;; (define-page results "/results"
      ;;   (format nil "~{~A~}"
      ;;           (list
      ;;            (format nil "<h1>Страница поиска</h1>")
      ;;            (format nil "<h2>Простой поиск</h2>")
      ;;            "Пустой поисковый запрос"))
      ;;   (:find (act-btn "FIND" "FIND" "Искать")
      ;;          (format nil "~{~A~}"
      ;;                  (list
      ;;                   (format nil "~%<h1>Страница поиска</h1>")
      ;;                   (format nil "~%<h2>Выборка</h2>")
      ;;                   (format nil "~%<br /><br />Параметры поиска: ~A" (bprint p))
      ;;                   (format nil "~%<br /><br />~A"
      ;;                           (let* ((form `(find-query
      ;;                                          ,(parse-integer (getf p :price-from))
      ;;                                          ,(parse-integer (getf p :price-to))
      ;;                                          )))
      ;;                             (unless (equal "0" (getf p :district))
      ;;                               (setf form (append form (list :district (parse-integer (getf p :district))))))
      ;;                             (unless (equal "0" (getf p :metro))
      ;;                               (setf form (append form (list :metro (parse-integer (getf p :metro))))))
      ;;                             (unless (equal "0" (getf p :deadline))
      ;;                               (setf form (append form (list :deadline (parse-integer (getf p :deadline))))))
      ;;                             (unless (equal "0" (getf p :cmpx))
      ;;                               (setf form (append form (list :cmpx (parse-integer (getf p :cmpx))))))
      ;;                             (when (getf p :studio)
      ;;                               (setf form (append form (list :studio t))))
      ;;                             (when (getf p :one)
      ;;                               (setf form (append form (list :one t))))
      ;;                             (when (getf p :two)
      ;;                               (setf form (append form (list :two t))))
      ;;                             (when (getf p :three)
      ;;                               (setf form (append form (list :three t))))
      ;;                             (format nil "~%<br /><br />Запрос: ~A~%<br /><br />Результат: <br/><br />~A"
      ;;                                     (bprint form)
      ;;                                     (format nil "<table border=1><tr>~{~A~}</tr>~{~A~}</table>"
      ;;                                             (loop :for item :in '("Район" "Комплекс" "Метро" "Расстояние" "Срок сдачи"
      ;;                                                                   "Отделка" "Ипотека" "Рассрочка" "Кол-во комнат" "Общая площадь" "Цена") :collect
      ;;                                                (format nil "~%<th>~A</th>" item))
      ;;                                             (loop :for item :in (eval form) :collect
      ;;                                                (format nil "~%<tr>~{~A~}</tr>"
      ;;                                                        (loop :for item :in item :collect
      ;;                                                           (format nil "~%<td>~A</td>" item))))))))))))
   #+END_SRC

* Проект CRM-системы для отдела продаж

  Обращение стоит денег, его надо оформлять в объект базы CRM - чтобы
  не терялись. В первую очередь необходимо зафиксировать телефон, с
  которого звонит клиент

* Сценарии использования
** Просто карта

   Макета нет, но можно ориентировать на Trend_search_map.

   Title: Все ЖК.

   ostrovok.ru

   Закрыть карту.

   Нам надо развернуть карту на целый экран или свернуть чтобы показть выборку.

   Надо подумать делать просто большую карту или вместе с выборкой и фильтрами

   По умолчанию открыватся большая, после клика на маркер нужно что-то показать об выбранном
   комплексе. Можно попапом, или в карту уменьшить и сбоку.

   Все комплексы.

   Карта не должна скроллиться

** Поиск вторичного жилья

   В первом релизе не будет.

   Вторичное жилье не так критично, т.к. занимает 1% от
   реализаций, ему можно оставить только простой поиск.

   Для вторички нет срока сдачи, но есть тип дома (список выбора)

   Экпертов также часто интересует id обьекта - при вводе в строку
   поиска числа находится должен искомый объект. id должен печататься
   и на карточке квартиры, для того чтобы, можно было по телефону
   объяснить о каком объекте идет речь.

** Ипотечный калькулятор в карточке квартиры

   Задачи:
   - Показать клиенту что он может взять квартиру в ипотеку
   - Дать клиенту возможность оценить свои возможности, поиграв с калькулятором.

   Мы должны иметь возможность присваивать программы =корпусу очереди=. У одного корпуса может быть
   множество разных программ от множества разных банков.  На карточке квартиры нужно показать
   расчет с эвристически лучшей программой - например, с самой низкой процентной ставкой и самым
   длинным сроком кредита - но есть вариант рекомендовать это вручную.  Мы не показываем ему инфу
   по программе банка (даже наименование банка не светим), чтобы он консультировался с нашим
   специалистом. Но менеджеры получают подробную инфу.

   Параметры:
   - Стоимость квартиры (мин 10% от стоимости квартиры) - не давать клиенту забить меньше
   - Первоначальный взнаос (мин 10%) - не давать клиенту забить меньше
   - Срок кредита (макс 25 лет)
   - Процентная ставка % в год - по идее если клиенту показывается оптимальный банк то он не
     должен мочь ее менять.
   - Менеджеру видно банки, % и ежемесячный платеж.
   Результат
   - Ежемесячный платеж

** Ипотечный калькулятор в отдельном разделе

   Ипотечный калькулятор используется клиентом чтобы расчитать ипотеку неважно для какой
   квартиры. После рассчета можно отдать клиенту выборку подходящих квартир.

   Есть банки, у них есть "программы". Мы дожны создавать базу по банкам и их программам. У
   программы банка есть:
   - Наименование
   - Максимальный срок кредита
   - Процентная ставка
   - Минимальный первый взнос в процентах.

   Сценарии проговаривать с ипотечниками - уточнять по ходу дела.

   Варианты расчета:
   - Отталкиваемся от дохода
     - Ставим максммальный срок
     - Подбираем сумму кредита (доход 50.000, может ли взять 2.000.000)
     - Определяем ежемесячный платеж - смотрим сможет ли платить.
     - Манипулируем суммами чтобы учесть все интересы.
   - Отталкиваемся от максимального размера ежемесячный платежей
   - Отталкиваемся от максимального срока погашения (из-за возраста)
   - Отталкиваемся от единственного банка или от суммы кредита

** Калькулятор рассрочки

   Чем сложнее чем ипотечный калькулятор?

   Если мы говорм про рассрочку, то параметры там те же самые что и в ипотеке:
   - мин перв взнос
   - срок
   - процент
   но если вносишь 10% и платишь за 2 года, то тебе такая процентная ставка
   Там очень много программ и все они зависят сложным образом от входных параметров, которых
   неопределенное число, и иногда даже зависит от типа квартир или, например, от этажности, акции
   и фазы луны.

   Застройщик делает программы рассрочки со сложными условиями..

   Как формализовать условия? У нас есть менеддеры по внутреннему развитию проектов. Они умеют
   делать экселевские калькуляторы для себя. Также многие застройщики деляют экселевские файлы для
   рассчетов своих рассрочек.

** Запись на демонстрацию квартир
   Просто форма заявки, пусть клиент запоняет.
** Похожие предложения
   Первый вариант - назначает менеджер вручную, в первом релизе можно ограничиться им.
   Второй вариант - назначить алгоритмом:
   - Берем за базу цену, отсекаем все что выходит за коридор цены.
   - Срок сдачи (коридор срока)
   - Район (тут все сложно - рядом по территориальности, например)
   Вариант:
** Продажа своей квартиры
   Ссылка на контакты пока или форму заявки.
** Обращение в компанию
   Контакты
** Подписка на рассылку
   В первом релизе можно обойтись без нее.
   Рассылка долждна быть в нескольких вариантах.
   - Возможность подписаться на новости по конкретному объекту
   - Возможность подписать на инвестиционные предложения, которые мы сами генерируем
   - Подписка на старте продаж.
** Сравнение
   Trend_comparisioon

   В сравнение можно добавлять и жилые комплексы и квартиры. Если человек добавляет квартиру, то
   ЖК добавляется автоматически.

   О ЖК:

   При нажатии менеджером "отправить на почту" нужно генерировать ссылку с этими объектами,
   добавленными в сравнение. Это нужно чтобы отдать клиенту "на подумать".

   Карта с объектами с автоматическим расчетом центра и масштаба

   Скроллер влево-вправо
   Сердечко - добавить в избранное
   Удалить их сравнения
   Блок "о комплексе"
   - Рендер (кликабельно в объект)
   - Название ЖК и очередь
   - Район
   - Метро и расстояние до него
   - Срок сдачи
   - Цена минимальных квартир
   - Тип отделки
   - Ипотека с указанием макс срока
   - Рассрочка с указанием макс срока
   - Стандартный блок "тип квартиры- цена от - метраж по всем типам квартир"
   Блок сравнения по паспорту объекта
   ... поднимаем из комплекса

   О квартирах:
   - Сердечко - добавить в избранное
   - Удалить их сравнения
   - Планировка (картинка с увеличением)
   - Сравнение по данным таблицы по квартирам, которую мы описывали в карточке ЖК.

** Избранное

   Trend_favorite_map

   Избранное согласно поисковой выдаче. Все так же, только избранное.
   Но в избранном может быть как комплекс так и квартира. Как отображать это таблицей -
   понятно. А как отображать на карте?

** "Просмотрено" - список объектов просмотренных пользователем ранее
   Отображается точно также как избранное, но заносим мы туда только комплексы, без
   квартир. Непонятно почему?

** Хранение и визуализация истории цен по объекту (!) (менеджер и возможно клиент)
   Это нужно чтобы показать клиенту инвестиционную привлекательность квартиры в этом корпусе.

   График с четырьмя кривыми цен по типам квартиры.

   Нам нужна цена квадратного метра в зависимости от типа квартиры.

   Контенщик или робот заносит в базу базовую цену квадратного метра (разную в зависимости от
   типа квартиры)
** Внесение данных контентщиком
** Внесение данных объектов роботом
** Скачать pdf
* Тесты

  #+NAME: trend_test
  #+BEGIN_SRC lisp :noweb tangle :exports none

    ;; Тестируем trend
    (defun trend-test ()
      <<trend_test_contents>>
      (dbg "passed: trend-test~%"))
    (trend-test)
  #+END_SRC

  #+NAME: trend_test_contents
  #+BEGIN_SRC lisp :noweb tangle :exports none

  #+END_SRC
* Остальное

  Элементарный поиск (то что есть на существующем сайте)
  Карточки квартир
  Поиск по большому кол-ву параметров:
  - первый взнос
  - платеж в месяц
  - инвестиционная привлекательность
  - ...
  Личный кабинет менеджера
  - Графики чтобы обосновать клиенту инвест. привлекательность
  - Статистика работы менеджеров
  - ...
* Конкуренты
  cian.ru
  петербургская недвижимость
  миан
  миель
  инком
  ндв-недвижимость
* Инвест-привлекательность:

  В идеале для клиента надо предоставить форму с двумя полями:
  - Сумма которую хочет инвестировать клиент
  - Срок на который хочет инвестировать клиент

  И система автоматически подберет ему подходящие варианты (из числа заранее отобранных
  менеджерами компании)

* Точки входа

  Соберем шаблоны:

  #+NAME: trend_tpl
  #+BEGIN_SRC closure-template-html :tangle src/mod/trend/trend-tpl.htm :noweb tangle :exports none
    // -*- mode: closure-template-html; fill-column: 140 -*-
    {namespace trendtpl}

    <<trendtpl_contents>>
  #+END_SRC

  Скомпилируем шаблоны при подготовке модуля

  #+NAME: trend_prepare
  #+BEGIN_SRC lisp :tangle src/mod/trend/trend-prepare.lisp :noweb tangle :exports none
    (in-package #:moto)

    ;; Скомпилируем шаблон
    (closure-template:compile-template
     :common-lisp-backend
     (pathname
      (concatenate 'string *base-path* "mod/trend/trend-tpl.htm")))
  #+END_SRC

  Соберем контроллеры и все функции, которые контроллеры вызывают

  #+NAME: trend_fn
  #+BEGIN_SRC lisp :tangle src/mod/trend/trend.lisp :noweb tangle :exports none
    (in-package #:moto)

    <<flat_entity>>

    <<trend_fn_contents>>

    <<trend_test>>
  #+END_SRC

* Сборка
** Сущности и автоматы

   Соберем все сущности и автоматы

   #+NAME: entity_and_automates
   #+BEGIN_SRC lisp :tangle src/mod/trend/entityes.lisp :noweb tangle :exports none :padline no :comments link
     (in-package #:moto)

     <<asm_cmpx()>>

     <<asm_plex()>>

     <<asm_crps()>>

     <<asm_flat()>>

     <<asm_city()>>

     <<asm_district()>>

     ;; Районы города
     ;; (make-district :name "Адмиралтейский")
     ;; (make-district :name "Василеостровский")
     ;; (make-district :name "Выборгский")
     ;; (make-district :name "Калининский")
     ;; (make-district :name "Кировский")
     ;; (make-district :name "Колпинский")
     ;; (make-district :name "Красногвардейский")
     ;; (make-district :name "Красносельский")
     ;; (make-district :name "Кронштадтский")
     ;; (make-district :name "Курортный")
     ;; (make-district :name "Московский")
     ;; (make-district :name "Невский")
     ;; (make-district :name "Петроградский")
     ;; (make-district :name "Петродворцовый")
     ;; (make-district :name "Приморский")
     ;; (make-district :name "Пушкинский")
     ;; (make-district :name "Фрунзенский")
     ;; (make-district :name "Центральный")
     ;; (make-district :name "Всеволожкси")

     ;; Районы области
     ;; (make-district :name "Бокситогорский")
     ;; (make-district :name "Волосовский")
     ;; (make-district :name "Волховский")
     ;; (make-district :name "Всеволожский")
     ;; (make-district :name "Выборгский")
     ;; (make-district :name "Гатчинский")
     ;; (make-district :name "Кингисеппский")
     ;; (make-district :name "Киришский")
     ;; (make-district :name "Кировский")
     ;; (make-district :name "Лодейнопольский")
     ;; (make-district :name "Ломоносовский")
     ;; (make-district :name "Лужский")
     ;; (make-district :name "Подпорожский")
     ;; (make-district :name "Приозерский")
     ;; (make-district :name "Сланцевский")
     ;; (make-district :name "Тихвинский")
     ;; (make-district :name "Тосненский")

     <<asm_metro()>>

     ;; (make-metro :name "Автово")
     ;; (make-metro :name "Адмиралтейская")
     ;; (make-metro :name "Академическая")
     ;; (make-metro :name "Балтийская")
     ;; (make-metro :name "Бухарестская")
     ;; (make-metro :name "Василеостровская")
     ;; (make-metro :name "Владимирская")
     ;; (make-metro :name "Волковская")
     ;; (make-metro :name "Выборгская")
     ;; (make-metro :name "Горьковская")
     ;; (make-metro :name "Гостиный двор")
     ;; (make-metro :name "Гражданский проспект")
     ;; (make-metro :name "Девяткино")
     ;; (make-metro :name "Достоевская")
     ;; (make-metro :name "Елизаровская")
     ;; (make-metro :name "Звёздная")
     ;; (make-metro :name "Звенигородская")
     ;; (make-metro :name "Кировский завод")
     ;; (make-metro :name "Комендантский проспект")
     ;; (make-metro :name "Крестовский остров")
     ;; (make-metro :name "Купчино")
     ;; (make-metro :name "Ладожская")
     ;; (make-metro :name "Ленинский проспект")
     ;; (make-metro :name "Лесная")
     ;; (make-metro :name "Лиговский проспект")
     ;; (make-metro :name "Ломоносовская")
     ;; (make-metro :name "Маяковская")
     ;; (make-metro :name "Международная")
     ;; (make-metro :name "Московская")
     ;; (make-metro :name "Московские ворота")
     ;; (make-metro :name "Нарвская")
     ;; (make-metro :name "Невский проспект")
     ;; (make-metro :name "Новочеркасская")
     ;; (make-metro :name "Обводный канал")
     ;; (make-metro :name "Обухово")
     ;; (make-metro :name "Озерки")
     ;; (make-metro :name "Парк Победы")
     ;; (make-metro :name "Парнас")
     ;; (make-metro :name "Петроградская")
     ;; (make-metro :name "Пионерская")
     ;; (make-metro :name "Площадь Александра Невского")
     ;; (make-metro :name "Площадь Александра Невского")
     ;; (make-metro :name "Площадь Восстания")
     ;; (make-metro :name "Площадь Ленина")
     ;; (make-metro :name "Площадь Мужества")
     ;; (make-metro :name "Политехническая")
     ;; (make-metro :name "Приморская")
     ;; (make-metro :name "Пролетарская")
     ;; (make-metro :name "Проспект Большевиков")
     ;; (make-metro :name "Проспект Ветеранов")
     ;; (make-metro :name "Проспект Просвещения")
     ;; (make-metro :name "Пушкинская")
     ;; (make-metro :name "Рыбацкое")
     ;; (make-metro :name "Садовая")
     ;; (make-metro :name "Сенная площадь")
     ;; (make-metro :name "Спасская")
     ;; (make-metro :name "Спортивная")
     ;; (make-metro :name "Старая Деревня")
     ;; (make-metro :name "Технологический институт")
     ;; (make-metro :name "Технологический институт")
     ;; (make-metro :name "Удельная")
     ;; (make-metro :name "Улица Дыбенко")
     ;; (make-metro :name "Фрунзенская")
     ;; (make-metro :name "Чёрная речка")
     ;; (make-metro :name "Чернышевская")
     ;; (make-metro :name "Чкаловская")
     ;; (make-metro :name "Электросила")

     <<asm_deadline()>>

     ;; (make-deadline :name "1 квартал 2015")
     ;; (make-deadline :name "2 квартал 2015")
     ;; (make-deadline :name "3 квартал 2015")
     ;; (make-deadline :name "4 квартал 2015")

     ;; (make-deadline :name "1 квартал 2016")
     ;; (make-deadline :name "2 квартал 2016")
     ;; (make-deadline :name "3 квартал 2016")
     ;; (make-deadline :name "4 квартал 2016")

     ;; (make-deadline :name "1 квартал 2017")
     ;; (make-deadline :name "2 квартал 2017")
     ;; (make-deadline :name "3 квартал 2017")
     ;; (make-deadline :name "4 квартал 2017")

     ;; (make-deadline :name "1 квартал 2018")
     ;; (make-deadline :name "2 квартал 2018")
     ;; (make-deadline :name "3 квартал 2018")
     ;; (make-deadline :name "4 квартал 2018")

     ;; (make-deadline :name "1 квартал 2019")
     ;; (make-deadline :name "2 квартал 2019")
     ;; (make-deadline :name "3 квартал 2019")
     ;; (make-deadline :name "4 квартал 2019")

   #+END_SRC

*** Жилой комплекс

    #+NAME: asm_cmpx
    #+BEGIN_SRC emacs-lisp :var flds=cmpx_flds :exports none :session gen
      ;; (gen-entity "cmpx" "комплекса" flds)
    #+END_SRC

*** Очередь жилого комплекса

    #+NAME: asm_plex
    #+BEGIN_SRC emacs-lisp :var flds=plex_flds :exports none :session gen
      ;; (gen-entity "plex" "очереди жилого комплекса" flds)
    #+END_SRC

*** Корпус очереди жилого комплекса

    #+NAME: asm_crps
    #+BEGIN_SRC emacs-lisp :var flds=crps_flds :exports none :session gen
      ;; (gen-entity "crps" "корпуса очереди жилого комплекса" flds)
    #+END_SRC

*** Планировка

    #+NAME: asm_flat
    #+BEGIN_SRC emacs-lisp :var flds=flat_flds :exports none :session gen
      ;; (gen-entity "flat" "планировки" flds)
    #+END_SRC

*** Город

    #+NAME: asm_city
    #+BEGIN_SRC emacs-lisp :var flds=city_flds :exports none :session gen
      ;; (gen-entity "city" "города" flds)
    #+END_SRC

*** Районы

    #+NAME: asm_district
    #+BEGIN_SRC emacs-lisp :var flds=district_flds :exports none :session gen
      ;; (gen-entity "district" "района" flds)
    #+END_SRC

*** Метро

    #+NAME: asm_metro
    #+BEGIN_SRC emacs-lisp :var flds=metro_flds :exports none :session gen
      ;; (gen-entity "metro" "метро" flds)
    #+END_SRC

*** Сроки сдачи

    #+NAME: asm_deadline
    #+BEGIN_SRC emacs-lisp :var flds=deadline_flds :exports none :session gen
      ;; (gen-entity "deadline" "метро" flds)
    #+END_SRC

** Загрузчик данных из файлов

   Соберем загрузчик

   #+NAME: asm_loader
   #+BEGIN_SRC lisp :tangle src/mod/trend/loader.lisp :noweb tangle :exports none :padline no :comments link
   <<loader>>
   #+END_SRC
