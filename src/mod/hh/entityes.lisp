;; [[file:hh.org::*Сущности и автоматы][entity_and_automates]]
(in-package #:moto)
(define-automat vacancy "Автомат вакансии"
  ((id serial)
   (src-id integer)
   (archive boolean)
   (name varchar)
   (currency (or db-null varchar))
   (base-salary (or db-null integer))
   (salary (or db-null integer))
   (salary-text (or db-null varchar))
   (salary-max (or db-null integer))
   (salary-min (or db-null integer))
   (emp-id (or db-null integer))
   (emp-name varchar)
   (city varchar)
   (metro varchar)
   (experience varchar)
   (date varchar)
   (respond varchar)
   (descr varchar)
   (notes (or db-null varchar))
   (response (or db-null varchar)))
  (:accept :discard :offer :interview :testjob :invite :reject :beenviewed :responded :interesting :uninteresting :unsort)
  ((:unsort :uninteresting :uns-uni)
   (:unsort :interesting :uns-int)
   (:unsort :responded :uns-res)
   (:uninteresting :interesting :uni-int)
   (:uninteresting :responded :uni-res)
   (:uninteresting :uninteresting :uni-uni)
   (:interesting :uninteresting :int-uni)
   (:interesting :responded :int-res)
   (:interesting :interesting :int-int)
   (:responded :beenviewed :res-bee)
   (:responded :uninteresting :res-uni)
   (:responded :reject :res-rej)
   (:responded :invite :res-inv)
   (:responded :responded :res-res)
   (:beenviewed :uninteresting :bee-uni)
   (:beenviewed :reject :bee-rej)
   (:beenviewed :invite :bee-inv)
   (:beenviewed :testjob :bee-tes)
   (:beenviewed :beenviewed :bee-bee)
   (:testjob :invite :tes-inv)
   (:testjob :interview :tes-int)
   (:testjob :uninteresting :tes-uni)
   (:testjob :offer :tes-off)
   (:testjob :testjob :tes-tes)
   (:reject :responded :rej-res)
   (:reject :uninteresting :rej-uni)
   (:reject :reject :rej-rej)
   (:invite :invite :inv-inv)
   (:invite :uninteresting :inv-uni)
   (:invite :testjob :inv-tes)
   (:invite :interview :inv-int)
   (:interview :uninteresting :int-uni)
   (:interview :discard :int-dis)
   (:interview :testjob :int-tes)
   (:interview :interview :int-int)
   (:discard :uninteresting :dis-uni)
   (:discard :discard :dis-dis)
   (:interview :offer :int-off)
   (:offer :uninteresting :off-uni)
   (:offer :offer :off-off)
   (:offer :accept :off-onj)
   (:accept :accept :acc-acc)))

(define-automat resume "Автомат резюме"
  ((id serial)
   (hh-id (or db-null varchar))
   (title (or db-null varchar))
   (last-name (or db-null varchar))
   (first-name (or db-null varchar))
   (middle-name (or db-null varchar))
   (birthday (or db-null varchar))
   (gender (or db-null varchar))
   (area (or db-null varchar))
   (metro (or db-null varchar))
   (relocation (or db-null varchar))
   (relocation-area (or db-null varchar))
   (business-trip-readiness (or db-null varchar))
   (citizen-ship (or db-null varchar))
   (work-ticket (or db-null varchar))
   (travel-time (or db-null varchar))
   (cell-phone-country (or db-null varchar))
   (cell-phone-city (or db-null varchar))
   (cell-phone-number (or db-null varchar))
   (cell-phone-comment (or db-null varchar))
   (home-phone-country (or db-null varchar))
   (home-phone-city (or db-null varchar))
   (home-phone-number (or db-null varchar))
   (home-phone-comment (or db-null varchar))
   (work-phone-country (or db-null varchar))
   (work-phone-city (or db-null varchar))
   (work-phone-number (or db-null varchar))
   (work-phone-comment (or db-null varchar))
   (email-string (or db-null varchar))
   (preferred-contact (or db-null varchar))
   (icq (or db-null varchar))
   (skype (or db-null varchar))
   (freelance (or db-null varchar))
   (moi_krug (or db-null varchar))
   (linkedin (or db-null varchar))
   (facebook (or db-null varchar))
   (livejournal (or db-null varchar))
   (personal (or db-null varchar))
   (prof-area (or db-null varchar))
   (specializations (or db-null varchar))
   (salary-amount (or db-null varchar))
   (salary-currency (or db-null varchar))
   (employment (or db-null varchar))
   (work-schedule (or db-null varchar))
   (education-level-string (or db-null varchar))
   (primary-education-id (or db-null varchar))
   (primary-education-name (or db-null varchar))
   (primary-education-university-id (or db-null varchar))
   (primary-education-faculty-id (or db-null varchar))
   (primary-education-organization (or db-null varchar))
   (primary-education-result (or db-null varchar))
   (primary-education-specialty-id (or db-null varchar))
   (primary-education-year (or db-null varchar))
   (additional-education-id (or db-null varchar))
   (additional-education-name (or db-null varchar))
   (additional-education-organization (or db-null varchar))
   (additional-education-result (or db-null varchar))
   (additional-education-year (or db-null varchar))
   (certificate-id (or db-null varchar))
   (certificate-type (or db-null varchar))
   (certificate-selected (or db-null varchar))
   (certificate-ownerName (or db-null varchar))
   (certificate-transcription-id (or db-null varchar))
   (certificate-password (or db-null varchar))
   (certificate-title (or db-null varchar))
   (certificate-achievementDate (or db-null varchar))
   (certificate-url (or db-null varchar))
   (attestation-education-id (or db-null varchar))
   (attestation-education-name (or db-null varchar))
   (attestation-education-organization (or db-null varchar))
   (attestation-education-result (or db-null varchar))
   (attestation-education-year (or db-null varchar))
   (languages (or db-null varchar)))
  (:accept :discard :offer :interview :testjob :invite :reject :beenviewed :responded :interesting :uninteresting :unsort)
  ((:unsort :uninteresting :uns-uni)
   (:unsort :interesting :uns-int)
   (:unsort :responded :uns-res)
   (:uninteresting :interesting :uni-int)
   (:uninteresting :responded :uni-res)
   (:uninteresting :uninteresting :uni-uni)
   (:interesting :uninteresting :int-uni)
   (:interesting :responded :int-res)
   (:interesting :interesting :int-int)
   (:responded :beenviewed :res-bee)
   (:responded :uninteresting :res-uni)
   (:responded :reject :res-rej)
   (:responded :invite :res-inv)
   (:responded :responded :res-res)
   (:beenviewed :uninteresting :bee-uni)
   (:beenviewed :reject :bee-rej)
   (:beenviewed :invite :bee-inv)
   (:beenviewed :testjob :bee-tes)
   (:beenviewed :beenviewed :bee-bee)
   (:testjob :invite :tes-inv)
   (:testjob :interview :tes-int)
   (:testjob :uninteresting :tes-uni)
   (:testjob :offer :tes-off)
   (:testjob :testjob :tes-tes)
   (:reject :responded :rej-res)
   (:reject :uninteresting :rej-uni)
   (:reject :reject :rej-rej)
   (:invite :invite :inv-inv)
   (:invite :uninteresting :inv-uni)
   (:invite :testjob :inv-tes)
   (:invite :interview :inv-int)
   (:interview :uninteresting :int-uni)
   (:interview :discard :int-dis)
   (:interview :testjob :int-tes)
   (:interview :interview :int-int)
   (:discard :uninteresting :dis-uni)
   (:discard :discard :dis-dis)
   (:interview :offer :int-off)
   (:offer :uninteresting :off-uni)
   (:offer :offer :off-off)
   (:offer :accept :off-onj)
   (:accept :accept :acc-acc)))

(define-automat rule "Автомат правила"
  ((id serial)
   (name varchar)
   (user-id integer)
   (rank integer)
   (ruletype varchar)
   (antecedent varchar)
   (consequent varchar)
   (notes (or db-null varchar)))
  (:inactive :active)
  ((:active :inactive :rule-activation)
   (:inactive :active :rule-deactivation)))

(define-automat srcaccount "Автомат аккаунта"
  ((id serial)
   (user_id integer)
   (src_source varchar)
   (src_login varchar)
   (src_password varchar)
   (src_fio varchar))
  (:wrong :logged :inactive :active)
  ((:active :inactive :account-activation)
   (:inactive :active :account-deactivation)
   (:active :logged :account-login)
   (:logged :active :account-logout)
   (:active :wrong :account-wrong)))
;; entity_and_automates ends here
